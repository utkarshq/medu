get:
  operationId: GetProductCategoriesId
  summary: Get a Product Category
  description: >-
    Retrieve a product category by its ID. You can expand the product category's
    relations or select the fields that should be returned.
  x-authenticated: true
  parameters:
    - name: id
      in: path
      description: The product category's ID.
      required: true
      schema:
        type: string
    - name: fields
      in: query
      description: >-
        Comma-separated fields that should be included in the returned data. if
        a field is prefixed with `+` it will be added to the default fields,
        using `-` will remove it from the default fields. without prefix it will
        replace the entire default fields. NOTE: This route doesn't allow
        expanding custom relations.
      required: false
      schema:
        type: string
        title: fields
        description: >-
          Comma-separated fields that should be included in the returned data.
          if a field is prefixed with `+` it will be added to the default
          fields, using `-` will remove it from the default fields. without
          prefix it will replace the entire default fields. NOTE: This route
          doesn't allow expanding custom relations.
        externalDocs:
          url: '#select-fields-and-relations'
    - name: include_ancestors_tree
      in: query
      description: >-
        Whether to retrieve the category's parent. If you enable this, add to
        the `fields` query parameter `parent_category` to set the parent of a
        category in this field. You can either pass `*parent_category` to
        retreieve the fields of all parent categories, or select specific fields
        to make the response size smaller. For example,
        `fields=parent_category.id,parent_category.name`.
      required: false
      schema:
        type: boolean
        title: include_ancestors_tree
        description: >-
          Whether to retrieve the category's parent. If you enable this, add to
          the `fields` query parameter `parent_category` to set the parent of a
          category in this field. You can either pass `*parent_category` to
          retreieve the fields of all parent categories, or select specific
          fields to make the response size smaller. For example,
          `fields=parent_category.id,parent_category.name`.
    - name: include_descendants_tree
      in: query
      description: >-
        Whether to retrieve a list of child categories. If you enable this, add
        to the `fields` query parameter `category_children` to set the children
        of a category in this field. You can either pass `*category_children` to
        retreieve the fields of all child categories, or select specific fields
        to make the response size smaller. For example,
        `fields=category_children.id,category_children.name`.
      required: false
      schema:
        type: boolean
        title: include_descendants_tree
        description: >-
          Whether to retrieve a list of child categories. If you enable this,
          add to the `fields` query parameter `category_children` to set the
          children of a category in this field. You can either pass
          `*category_children` to retreieve the fields of all child categories,
          or select specific fields to make the response size smaller. For
          example, `fields=category_children.id,category_children.name`.
  security:
    - api_token: []
    - cookie_auth: []
    - jwt_token: []
  x-codeSamples:
    - lang: Shell
      label: cURL
      source:
        $ref: ../code_samples/Shell/admin_product-categories_{id}/get.sh
  tags:
    - Product Categories
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: ../components/schemas/AdminProductCategoryResponse.yaml
    '400':
      $ref: ../components/responses/400_error.yaml
    '401':
      $ref: ../components/responses/unauthorized.yaml
    '404':
      $ref: ../components/responses/not_found_error.yaml
    '409':
      $ref: ../components/responses/invalid_state_error.yaml
    '422':
      $ref: ../components/responses/invalid_request_error.yaml
    '500':
      $ref: ../components/responses/500_error.yaml
post:
  operationId: PostProductCategoriesId
  summary: Update a Product Category
  description: Update a product category's details.
  x-authenticated: true
  parameters:
    - name: id
      in: path
      description: The product category's ID.
      required: true
      schema:
        type: string
    - name: fields
      in: query
      description: >-
        Comma-separated fields that should be included in the returned data. if
        a field is prefixed with `+` it will be added to the default fields,
        using `-` will remove it from the default fields. without prefix it will
        replace the entire default fields. NOTE: This route doesn't allow
        expanding custom relations.
      required: false
      schema:
        type: string
        title: fields
        description: >-
          Comma-separated fields that should be included in the returned data.
          if a field is prefixed with `+` it will be added to the default
          fields, using `-` will remove it from the default fields. without
          prefix it will replace the entire default fields. NOTE: This route
          doesn't allow expanding custom relations.
        externalDocs:
          url: '#select-fields-and-relations'
  security:
    - api_token: []
    - cookie_auth: []
    - jwt_token: []
  requestBody:
    content:
      application/json:
        schema:
          type: object
          description: The properties to update in the product category.
          properties:
            name:
              type: string
              title: name
              description: The product category's name.
            description:
              type: string
              title: description
              description: The product category's description.
            handle:
              type: string
              title: handle
              description: The product category's handle. Must be a unique value.
            is_internal:
              type: boolean
              title: is_internal
              description: >-
                Whether the product category is only used for internal purposes
                and shouldn't be shown the customer.
            is_active:
              type: boolean
              title: is_active
              description: Whether the product category is active.
            parent_category_id:
              type: string
              title: parent_category_id
              description: The ID of a parent category.
            metadata:
              type: object
              description: >-
                The product category's metadata. Can hold custom key-value
                pairs.
            rank:
              type: number
              title: rank
              description: The product category's rank among other categories.
  x-codeSamples:
    - lang: Shell
      label: cURL
      source:
        $ref: ../code_samples/Shell/admin_product-categories_{id}/post.sh
  tags:
    - Product Categories
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: ../components/schemas/AdminProductCategoryResponse.yaml
    '400':
      $ref: ../components/responses/400_error.yaml
    '401':
      $ref: ../components/responses/unauthorized.yaml
    '404':
      $ref: ../components/responses/not_found_error.yaml
    '409':
      $ref: ../components/responses/invalid_state_error.yaml
    '422':
      $ref: ../components/responses/invalid_request_error.yaml
    '500':
      $ref: ../components/responses/500_error.yaml
  x-workflow: updateProductCategoriesWorkflow
delete:
  operationId: DeleteProductCategoriesId
  summary: Delete a Product Category
  description: Delete a product category. This doesn't deleted products in that category.
  x-authenticated: true
  parameters:
    - name: id
      in: path
      description: The product category's ID.
      required: true
      schema:
        type: string
  security:
    - api_token: []
    - cookie_auth: []
    - jwt_token: []
  x-codeSamples:
    - lang: Shell
      label: cURL
      source:
        $ref: ../code_samples/Shell/admin_product-categories_{id}/delete.sh
  tags:
    - Product Categories
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: ../components/schemas/AdminProductCategoryDeleteResponse.yaml
    '400':
      $ref: ../components/responses/400_error.yaml
    '401':
      $ref: ../components/responses/unauthorized.yaml
    '404':
      $ref: ../components/responses/not_found_error.yaml
    '409':
      $ref: ../components/responses/invalid_state_error.yaml
    '422':
      $ref: ../components/responses/invalid_request_error.yaml
    '500':
      $ref: ../components/responses/500_error.yaml
  x-workflow: deleteProductCategoriesWorkflow
