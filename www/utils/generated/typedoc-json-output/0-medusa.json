{
	"id": 46848,
	"name": "medusa",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 47110,
			"name": "HTTP_METHODS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of all the supported HTTP methods"
					}
				]
			},
			"type": {
				"type": "typeOperator",
				"operator": "readonly",
				"target": {
					"type": "tuple",
					"elements": [
						{
							"type": "literal",
							"value": "GET"
						},
						{
							"type": "literal",
							"value": "POST"
						},
						{
							"type": "literal",
							"value": "PUT"
						},
						{
							"type": "literal",
							"value": "PATCH"
						},
						{
							"type": "literal",
							"value": "DELETE"
						},
						{
							"type": "literal",
							"value": "OPTIONS"
						},
						{
							"type": "literal",
							"value": "HEAD"
						}
					]
				}
			}
		},
		{
			"id": 47047,
			"name": "RouteVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "intrinsic",
					"name": "number"
				},
				"objectType": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"target": 47110,
						"name": "HTTP_METHODS",
						"package": "@medusajs/framework"
					}
				}
			}
		},
		{
			"id": 46990,
			"name": "MiddlewareVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "USE"
					},
					{
						"type": "literal",
						"value": "ALL"
					},
					{
						"type": "reference",
						"target": 47047,
						"name": "RouteVerb",
						"package": "@medusajs/framework"
					}
				]
			}
		},
		{
			"id": 46861,
			"name": "MiddlewareFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 46982,
						"name": "MedusaRequestHandler",
						"package": "@medusajs/framework"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 46862,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46863,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46864,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 46992,
			"name": "MedusaErrorHandlerFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 46993,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 46994,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 46995,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 46996,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 47007,
										"name": "MedusaRequest",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 46997,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 47044,
										"name": "MedusaResponse",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 46998,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 47046,
										"name": "MedusaNextFunction",
										"package": "@medusajs/framework"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 47048,
			"name": "ParserConfigArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 47049,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 47050,
							"name": "sizeLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 47051,
							"name": "preserveRawBody",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								47050,
								47051
							]
						}
					]
				}
			}
		},
		{
			"id": 46991,
			"name": "ParserConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": false
					},
					{
						"type": "reference",
						"target": 47048,
						"name": "ParserConfigArgs",
						"package": "@medusajs/framework"
					}
				]
			}
		},
		{
			"id": 46865,
			"name": "MiddlewareRoute",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 46866,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 46867,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 46990,
										"name": "MiddlewareVerb",
										"package": "@medusajs/framework"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 46990,
											"name": "MiddlewareVerb",
											"package": "@medusajs/framework"
										}
									}
								]
							}
						},
						{
							"id": 46868,
							"name": "matcher",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "RegExp"
										},
										"name": "RegExp",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 46869,
							"name": "bodyParser",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 46991,
								"name": "ParserConfig",
								"package": "@medusajs/framework"
							}
						},
						{
							"id": 46870,
							"name": "middlewares",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 46861,
									"name": "MiddlewareFunction",
									"package": "@medusajs/framework"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								46867,
								46868,
								46869,
								46870
							]
						}
					]
				}
			}
		},
		{
			"id": 46871,
			"name": "MiddlewaresConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 46872,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 46873,
							"name": "errorHandler",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"target": 46992,
										"name": "MedusaErrorHandlerFunction",
										"package": "@medusajs/framework"
									}
								]
							}
						},
						{
							"id": 46874,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 46865,
									"name": "MiddlewareRoute",
									"package": "@medusajs/framework"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								46873,
								46874
							]
						}
					]
				}
			}
		},
		{
			"id": 47007,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 47011,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 47042,
						"name": "Body",
						"package": "@medusajs/framework",
						"qualifiedName": "MedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 47012,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 47055,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 47043,
								"name": "QueryFields",
								"package": "@medusajs/framework",
								"qualifiedName": "MedusaRequest.QueryFields",
								"refersToTypeParameter": true
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 47013,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 47014,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 47060,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/types"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 47015,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 47060,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/types"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 47016,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 47017,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 47018,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 47019,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 47020,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 47021,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 47022,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 47023,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														47021,
														47022,
														47023
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										47018,
										47019
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.remoteQueryConfig"
					}
				},
				{
					"id": 47024,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 47043,
						"name": "QueryFields",
						"package": "@medusajs/framework",
						"qualifiedName": "MedusaRequest.QueryFields",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 47025,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 47026,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the req.allowed set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowed"
					}
				},
				{
					"id": 47027,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 47028,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 47070,
						"name": "MedusaContainer",
						"package": "@medusajs/framework"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				},
				{
					"id": 47029,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 47030,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 47031,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.requestId"
					}
				},
				{
					"id": 47032,
					"name": "restrictedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 47091,
						"name": "RestrictedFields",
						"package": "@medusajs/framework"
					}
				},
				{
					"id": 47033,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 47100,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 47034,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 47035,
					"name": "additionalDataValidator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom validator to validate the "
							},
							{
								"kind": "code",
								"text": "`additional_data`"
							},
							{
								"kind": "text",
								"text": " property in\nrequests that allows for additional_data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodOptional"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodNullable"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
											"qualifiedName": "ZodObject"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodTypeAny"
												},
												"name": "ZodTypeAny",
												"package": "zod"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 47036,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 47037,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ZodObject",
										"package": "zod"
									}
								],
								"name": "ZodNullable",
								"package": "zod"
							}
						],
						"name": "ZodOptional",
						"package": "zod"
					}
				},
				{
					"id": 47038,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 47039,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 47040,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 47041,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										47040,
										47041
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						47011,
						47012,
						47013,
						47014,
						47015,
						47016,
						47024,
						47025,
						47026,
						47027,
						47028,
						47029,
						47030,
						47031,
						47032,
						47033,
						47034,
						47035,
						47038
					]
				}
			],
			"typeParameters": [
				{
					"id": 47042,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 47043,
					"name": "QueryFields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"typeArguments": [
						{
							"type": "reflection",
							"declaration": {
								"id": 47008,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"indexSignatures": [
									{
										"id": 47009,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"parameters": [
											{
												"id": 47010,
												"name": "key",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"type": "intrinsic",
							"name": "any"
						},
						{
							"type": "reference",
							"target": 47042,
							"name": "Body",
							"package": "@medusajs/framework",
							"qualifiedName": "MedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			]
		},
		{
			"id": 47044,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 47045,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 47045,
						"name": "Body",
						"package": "@medusajs/framework",
						"refersToTypeParameter": true
					}
				],
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 47046,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 46982,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 46988,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 46989,
					"name": "Res",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 46983,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 46984,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 46985,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 47007,
										"typeArguments": [
											{
												"type": "reference",
												"target": 46988,
												"name": "Body",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaRequest",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 46986,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 47044,
										"typeArguments": [
											{
												"type": "reference",
												"target": 46989,
												"name": "Res",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaResponse",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 46987,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 47046,
										"name": "MedusaNextFunction",
										"package": "@medusajs/framework"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 47091,
			"name": "RestrictedFields",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 47092,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 47093,
							"name": "new RestrictedFields",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 47091,
								"name": "RestrictedFields",
								"package": "@medusajs/framework"
							}
						}
					]
				},
				{
					"id": 47094,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 47095,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 47096,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 47097,
					"name": "add",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 47098,
							"name": "add",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 47099,
									"name": "fields",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						47092
					]
				},
				{
					"title": "Properties",
					"children": [
						47094
					]
				},
				{
					"title": "Methods",
					"children": [
						47095,
						47097
					]
				}
			]
		},
		{
			"id": 47070,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 47090,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
							"qualifiedName": "ModuleImplementations"
						},
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 47071,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 47072,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 47073,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 47074,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 47075,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 47074,
														"name": "K",
														"package": "@medusajs/framework",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 47076,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 47074,
													"name": "K",
													"package": "@medusajs/framework",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 47090,
													"name": "Cradle",
													"package": "@medusajs/framework",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 47077,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 47078,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 47079,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 47080,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 47078,
												"name": "T",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										}
									]
								},
								{
									"id": 47081,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 47082,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 47083,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 47086,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 47084,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 47085,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 47086,
																"name": "T",
																"package": "@medusajs/framework",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 47070,
														"name": "MedusaContainer",
														"package": "@medusajs/framework"
													}
												}
											]
										}
									}
								},
								{
									"id": 47087,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 47088,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 47089,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 47070,
														"name": "MedusaContainer",
														"package": "@medusajs/framework"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										47081,
										47087
									]
								},
								{
									"title": "Methods",
									"children": [
										47072
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 47111,
			"name": "FindConfigOrder",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary type fixing to allow any level of orders until we get to properly clean all the types"
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 47112,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignatures": [
						{
							"id": 47113,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 47114,
									"name": "Key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 47115,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "reference",
										"target": 47111,
										"name": "FindConfigOrder",
										"package": "@medusajs/types"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 47060,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 47061,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 47069,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 47062,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 47063,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 47064,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 47065,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 47111,
						"name": "FindConfigOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 47066,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 47067,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 47068,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						47061,
						47062,
						47063,
						47064,
						47065,
						47066,
						47067,
						47068
					]
				}
			],
			"typeParameters": [
				{
					"id": 47069,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 47055,
			"name": "RequestQueryFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields that can be passed in the query parameters of a request."
					}
				]
			},
			"children": [
				{
					"id": 47056,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 47057,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 47058,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 47059,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						47056,
						47057,
						47058,
						47059
					]
				}
			]
		},
		{
			"id": 46904,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"typeParameters": [
				{
					"id": 46924,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
							"qualifiedName": "ModuleImplementations"
						},
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 46905,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 46906,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 46907,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 46908,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 46909,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 46908,
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 46910,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 46908,
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 46924,
													"name": "Cradle",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 46911,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 46912,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 46913,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 46914,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 46912,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								},
								{
									"id": 46915,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 46916,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 46917,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 46920,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 46918,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 46919,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 46920,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 46904,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								},
								{
									"id": 46921,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 46922,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 46923,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 46904,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										46915,
										46921
									]
								},
								{
									"title": "Methods",
									"children": [
										46906
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 47052,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 47053,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 47054,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										47054
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 47001,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 47006,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 47002,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 47003,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 47004,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 47052,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 47005,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 47006,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								47003,
								47004,
								47005
							]
						}
					]
				}
			}
		},
		{
			"id": 46925,
			"name": "Logger",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 46926,
					"name": "panic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46927,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46928,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46929,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 46930,
					"name": "shouldLog",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46931,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46932,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46933,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 46934,
					"name": "setLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46935,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46936,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46937,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 46938,
					"name": "unsetLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46939,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46940,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 46941,
					"name": "activity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46942,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46943,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46944,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 46945,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 46946,
					"name": "progress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46947,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46948,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46949,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 46950,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 46951,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46952,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46953,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46954,
											"name": "messageOrError",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 46955,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 46956,
					"name": "failure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46957,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46958,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46959,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 46960,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 46961,
					"name": "success",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46962,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46963,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46964,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 46965,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 46966,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46967,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46968,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46969,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 46970,
					"name": "info",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46971,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46972,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46973,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 46974,
					"name": "warn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46975,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46976,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46977,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 46978,
					"name": "log",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46979,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 46980,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 46981,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						46926,
						46930,
						46934,
						46938,
						46941,
						46946,
						46951,
						46956,
						46961,
						46966,
						46970,
						46974,
						46978
					]
				}
			]
		},
		{
			"id": 47100,
			"name": "MedusaPricingContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 47101,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 47102,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 47103,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 47104,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 47105,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 47106,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 47107,
											"name": "groups",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 47108,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 47109,
																"name": "id",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	47109
																]
															}
														]
													}
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												47107
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								47102,
								47103,
								47104,
								47105
							]
						}
					]
				}
			}
		},
		{
			"id": 46885,
			"name": "instrumentHttpLayer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 46886,
					"name": "instrumentHttpLayer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Instrument the first touch point of the HTTP layer to report traces to\nOpenTelemetry"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 46887,
			"name": "instrumentRemoteQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 46888,
					"name": "instrumentRemoteQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Instrument the queries made using the remote query"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 46889,
			"name": "instrumentWorkflows",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 46890,
					"name": "instrumentWorkflows",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Instrument the workflows and steps execution"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 46891,
			"name": "registerOtel",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 46892,
					"name": "registerOtel",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A helper function to configure the OpenTelemetry SDK with some defaults.\nFor better/more control, please configure the SDK manually.\n\nYou will have to install the following packages within your app for\ntelemetry to work\n\n- @opentelemetry/sdk-node\n- @opentelemetry/resources\n- @opentelemetry/sdk-trace-node\n- @opentelemetry/instrumentation-pg\n- @opentelemetry/instrumentation"
							}
						]
					},
					"parameters": [
						{
							"id": 46893,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 46894,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 46895,
											"name": "serviceName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 46896,
											"name": "exporter",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/@opentelemetry/sdk-trace-base/build/src/export/SpanExporter.d.ts",
													"qualifiedName": "SpanExporter"
												},
												"name": "SpanExporter",
												"package": "@opentelemetry/sdk-trace-base"
											}
										},
										{
											"id": 46897,
											"name": "instrument",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 46898,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 46899,
																	"name": "http",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 46900,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 46901,
																	"name": "workflows",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 46902,
																	"name": "db",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		46899,
																		46900,
																		46901,
																		46902
																	]
																}
															]
														}
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 46903,
											"name": "instrumentations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../node_modules/@opentelemetry/instrumentation/build/src/types.d.ts",
														"qualifiedName": "Instrumentation"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../node_modules/@opentelemetry/instrumentation/build/src/types.d.ts",
																"qualifiedName": "InstrumentationConfig"
															},
															"name": "InstrumentationConfig",
															"package": "@opentelemetry/instrumentation"
														}
													],
													"name": "Instrumentation",
													"package": "@opentelemetry/instrumentation"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												46895,
												46896,
												46897,
												46903
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 46849,
			"name": "ClassConstructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 46853,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 46850,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 46851,
							"name": "new ClassConstructor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 46852,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 46853,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 46854,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 46904,
				"name": "coreMedusaContainer",
				"package": "@medusajs/types",
				"qualifiedName": "MedusaContainer"
			}
		},
		{
			"id": 46855,
			"name": "Logger",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 46925,
				"name": "coreLogger",
				"package": "@medusajs/types",
				"qualifiedName": "Logger"
			}
		},
		{
			"id": 46856,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 46860,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 46857,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 46858,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 46859,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 46860,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 46999,
			"name": "SubscriberContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 47000,
					"name": "subscriberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						47000
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 46875,
			"name": "SubscriberConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 46876,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 46877,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 46878,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 46999,
								"name": "SubscriberContext",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								46877,
								46878
							]
						}
					]
				}
			}
		},
		{
			"id": 46879,
			"name": "SubscriberArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 46884,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 46880,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 46881,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 47001,
								"typeArguments": [
									{
										"type": "reference",
										"target": 46884,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Event",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 46882,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 46904,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 46883,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								46881,
								46882,
								46883
							]
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				47091
			]
		},
		{
			"title": "Interfaces",
			"children": [
				47007,
				47060,
				47055,
				46925,
				46999
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				47047,
				46990,
				46861,
				46992,
				47048,
				46991,
				46865,
				46871,
				47044,
				47046,
				46982,
				47070,
				47111,
				46904,
				47052,
				47001,
				47100,
				46849,
				46854,
				46855,
				46856,
				46875,
				46879
			]
		},
		{
			"title": "Variables",
			"children": [
				47110
			]
		},
		{
			"title": "Functions",
			"children": [
				46885,
				46887,
				46889,
				46891
			]
		}
	],
	"packageName": "@medusajs/medusa",
	"symbolIdMap": {
		"46848": {
			"sourceFileName": "../../../../packages/medusa/src/index.ts",
			"qualifiedName": ""
		},
		"46849": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ClassConstructor"
		},
		"46850": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"46851": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"46852": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"46853": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"46854": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "MedusaContainer"
		},
		"46855": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Logger"
		},
		"46856": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Constructor"
		},
		"46857": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"46858": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"46859": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"46860": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"46861": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareFunction"
		},
		"46862": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"46863": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"46864": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "args"
		},
		"46865": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareRoute"
		},
		"46866": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"46867": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.method"
		},
		"46868": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.matcher"
		},
		"46869": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.bodyParser"
		},
		"46870": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.middlewares"
		},
		"46871": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MiddlewaresConfig"
		},
		"46872": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"46873": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.errorHandler"
		},
		"46874": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.routes"
		},
		"46875": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberConfig"
		},
		"46876": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"46877": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"46878": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.context"
		},
		"46879": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberArgs"
		},
		"46880": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"46881": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"46882": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.container"
		},
		"46883": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"46884": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "T"
		},
		"46885": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentHttpLayer"
		},
		"46886": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentHttpLayer"
		},
		"46887": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentRemoteQuery"
		},
		"46888": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentRemoteQuery"
		},
		"46889": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentWorkflows"
		},
		"46890": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentWorkflows"
		},
		"46891": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "registerOtel"
		},
		"46892": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "registerOtel"
		},
		"46893": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "options"
		},
		"46894": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type"
		},
		"46895": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"46896": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.exporter"
		},
		"46897": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.instrument"
		},
		"46898": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type"
		},
		"46899": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.http"
		},
		"46900": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.query"
		},
		"46901": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.workflows"
		},
		"46902": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.db"
		},
		"46903": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.instrumentations"
		},
		"46904": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"46905": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"46906": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"46907": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"46908": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"46909": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"46910": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"46911": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"46912": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"46913": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"46914": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"46915": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"46916": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"46917": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"46918": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "name"
		},
		"46919": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "registration"
		},
		"46920": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"46921": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.createScope"
		},
		"46922": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"46923": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"46924": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"46925": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"46926": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"46927": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46928": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46929": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"46930": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"46931": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46932": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46933": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"46934": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"46935": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46936": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46937": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"46938": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"46939": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46940": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46941": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"46942": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46943": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46944": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"46945": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"46946": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"46947": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46948": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46949": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"46950": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"46951": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"46952": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46953": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46954": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"46955": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"46956": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"46957": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46958": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46959": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"46960": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"46961": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"46962": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46963": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46964": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"46965": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"46966": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"46967": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46968": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46969": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"46970": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"46971": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46972": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46973": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"46974": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"46975": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46976": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46977": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"46978": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"46979": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46980": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"46981": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"46982": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"46983": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"46984": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"46985": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "req"
		},
		"46986": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "res"
		},
		"46987": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "next"
		},
		"46988": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "Body"
		},
		"46989": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "Res"
		},
		"46990": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareVerb"
		},
		"46991": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "ParserConfig"
		},
		"46992": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaErrorHandlerFunction"
		},
		"46993": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"46994": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"46995": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "error"
		},
		"46996": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "req"
		},
		"46997": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "res"
		},
		"46998": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "next"
		},
		"46999": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext"
		},
		"47000": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext.subscriberId"
		},
		"47001": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"47002": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"47003": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"47004": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"47005": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"47006": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"47007": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest"
		},
		"47008": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"47009": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.__index"
		},
		"47011": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"47012": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"47013": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"47014": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"47015": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"47016": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"47017": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"47018": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.fields"
		},
		"47019": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.pagination"
		},
		"47020": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"47021": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.order"
		},
		"47022": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.skip"
		},
		"47023": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.take"
		},
		"47024": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"47025": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"47026": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"47027": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"47028": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"47029": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"47030": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"47031": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"47032": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.restrictedFields"
		},
		"47033": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"47034": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"47035": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.additionalDataValidator"
		},
		"47036": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"47037": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"47038": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"47039": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"47040": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"47041": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"47042": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.Body"
		},
		"47043": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.QueryFields"
		},
		"47044": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaResponse"
		},
		"47045": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "Body"
		},
		"47046": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"47047": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "RouteVerb"
		},
		"47048": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "ParserConfigArgs"
		},
		"47049": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"47050": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.sizeLimit"
		},
		"47051": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.preserveRawBody"
		},
		"47052": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"47053": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"47054": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"47055": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"47056": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"47057": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"47058": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"47059": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"47060": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"47061": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"47062": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"47063": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"47064": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"47065": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"47066": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"47067": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"47068": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"47069": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"47070": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"47071": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type"
		},
		"47072": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"47073": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"47074": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "K"
		},
		"47075": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "key"
		},
		"47076": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "resolveOptions"
		},
		"47077": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"47078": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "T"
		},
		"47079": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "key"
		},
		"47080": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "resolveOptions"
		},
		"47081": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"47082": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type"
		},
		"47083": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type"
		},
		"47084": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "name"
		},
		"47085": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "registration"
		},
		"47086": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "T"
		},
		"47087": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type.createScope"
		},
		"47088": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type"
		},
		"47089": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type"
		},
		"47090": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "Cradle"
		},
		"47091": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields"
		},
		"47094": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields.#private"
		},
		"47095": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields.list"
		},
		"47096": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields.list"
		},
		"47097": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields.add"
		},
		"47098": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields.add"
		},
		"47099": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "fields"
		},
		"47100": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "MedusaPricingContext"
		},
		"47101": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type"
		},
		"47102": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.region_id"
		},
		"47103": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.currency_code"
		},
		"47104": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer_id"
		},
		"47105": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer"
		},
		"47106": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type"
		},
		"47107": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.groups"
		},
		"47108": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type"
		},
		"47109": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.id"
		},
		"47110": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "HTTP_METHODS"
		},
		"47111": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfigOrder"
		},
		"47112": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"47113": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"47115": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/medusa/src/index.ts"
		},
		"reflections": {
			"1": 46848
		}
	}
}
