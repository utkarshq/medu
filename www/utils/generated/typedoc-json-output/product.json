{
	"id": 14439,
	"name": "product",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 15355,
			"name": "FindConfigOrder",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary type fixing to allow any level of orders until we get to properly clean all the types"
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 15356,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignatures": [
						{
							"id": 15357,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 15358,
									"name": "Key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 15359,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "reference",
										"target": 15355,
										"name": "FindConfigOrder",
										"package": "@medusajs/types"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 14888,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 14889,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 14897,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 14890,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 14891,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 14892,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 14893,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15355,
						"name": "FindConfigOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14894,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14895,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 14896,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14889,
						14890,
						14891,
						14892,
						14893,
						14894,
						14895,
						14896
					]
				}
			],
			"typeParameters": [
				{
					"id": 14897,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 15369,
			"name": "MetadataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 15384,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 15385,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15387,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15387,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 15386,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15387,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15387,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15385,
						15386
					]
				}
			],
			"typeParameters": [
				{
					"id": 15387,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 14943,
					"name": "FilterableProductProps"
				},
				{
					"type": "reference",
					"target": 15063,
					"name": "FilterableProductTagProps"
				},
				{
					"type": "reference",
					"target": 15083,
					"name": "FilterableProductTypeProps"
				},
				{
					"type": "reference",
					"target": 15109,
					"name": "FilterableProductOptionProps"
				},
				{
					"type": "reference",
					"target": 15129,
					"name": "FilterableProductOptionValueProps"
				},
				{
					"type": "reference",
					"target": 15176,
					"name": "FilterableProductVariantProps"
				},
				{
					"type": "reference",
					"target": 15249,
					"name": "FilterableProductCollectionProps"
				},
				{
					"type": "reference",
					"target": 15290,
					"name": "FilterableProductCategoryProps"
				}
			]
		},
		{
			"id": 15052,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 15053,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15054,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15053
					]
				}
			],
			"typeParameters": [
				{
					"id": 15054,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 15055,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 15056,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15057,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15056
					]
				}
			],
			"typeParameters": [
				{
					"id": 15057,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 15459,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15460,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 15460,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 15460,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 15486,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 15490,
						"typeArguments": [
							{
								"type": "reference",
								"target": 15460,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 15493,
					"typeArguments": [
						{
							"type": "reference",
							"target": 15460,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 15461,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15462,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 15462,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 15462,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 15462,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 15486,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 15487,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15488,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 15489,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										15488
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 15524,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15525,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 15525,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 15525,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 15525,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 15514,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15523,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 15523,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 15515,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 15516,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									15516
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 15524,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 15523,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 15517,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15518,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15518
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 15524,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 15523,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 15519,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 15520,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											15520
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 15524,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 15523,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 15521,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15522,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15522
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 15524,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 15388,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15409,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 15389,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 15390,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15459,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15409,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15391,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15459,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15409,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15392,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 15461,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15409,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15461,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15409,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 15393,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 15461,
								"typeArguments": [
									{
										"type": "reference",
										"target": 15409,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15394,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15461,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15409,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15395,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15461,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15409,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15396,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 15459,
								"typeArguments": [
									{
										"type": "reference",
										"target": 15409,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15397,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 15461,
								"typeArguments": [
									{
										"type": "reference",
										"target": 15409,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15398,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 15461,
								"typeArguments": [
									{
										"type": "reference",
										"target": 15409,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15399,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 15461,
								"typeArguments": [
									{
										"type": "reference",
										"target": 15409,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15400,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 15461,
								"typeArguments": [
									{
										"type": "reference",
										"target": 15409,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15401,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15402,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15403,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15404,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15405,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 15406,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 15407,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 15408,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15390,
								15391,
								15392,
								15393,
								15394,
								15395,
								15396,
								15397,
								15398,
								15399,
								15400,
								15401,
								15402,
								15403,
								15404,
								15405,
								15406,
								15407,
								15408
							]
						}
					]
				}
			}
		},
		{
			"id": 15511,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15512,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 15512,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 15461,
						"typeArguments": [
							{
								"type": "reference",
								"target": 15512,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 15514,
						"typeArguments": [
							{
								"type": "reference",
								"target": 15512,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 15493,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15494,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 15388,
						"typeArguments": [
							{
								"type": "reference",
								"target": 15511,
								"typeArguments": [
									{
										"type": "reference",
										"target": 15494,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 15511,
						"typeArguments": [
							{
								"type": "reference",
								"target": 15494,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15511,
							"typeArguments": [
								{
									"type": "reference",
									"target": 15494,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 15513,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					}
				]
			}
		},
		{
			"id": 15505,
			"name": "FilterQueryProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15509,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 15510,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 15509,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 15509,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "bigint"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 15509,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": 15388,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 15509,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 15509,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "inferred",
							"name": "U"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 15506,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignatures": [
										{
											"id": 15507,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 15508,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "inferred",
												"name": "V"
											}
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "V"
									},
									"name": "V",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "object"
								},
								"trueType": {
									"type": "reference",
									"target": 15490,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "V"
													},
													"name": "V",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 15510,
												"name": "Prev",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 15513,
												"name": "PrevLimit",
												"package": "@medusajs/types"
											}
										}
									],
									"name": "FilterQuery",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 15490,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15491,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 15492,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 15492,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 15491,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 15498,
						"typeArguments": [
							{
								"type": "inferred",
								"name": "Prototype"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "reference",
						"target": 15505,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Prototype"
								},
								"name": "Prototype",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 15492,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 15505,
						"typeArguments": [
							{
								"type": "reference",
								"target": 15491,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 15492,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					}
				}
			}
		},
		{
			"id": 15495,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 15496,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15497,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15497
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 15480,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15485,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 15481,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 15482,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15483,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 15495,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15484,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15485,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15482,
								15483,
								15484
							]
						}
					]
				}
			}
		},
		{
			"id": 15438,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15441,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 15480,
						"typeArguments": [
							{
								"type": "reference",
								"target": 15441,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 15439,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15440,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15440
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 15449,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15458,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 15450,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 15451,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15452,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15458,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 15453,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15454,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15455,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15456,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 15457,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15451,
								15452,
								15453,
								15454,
								15455,
								15456,
								15457
							]
						}
					]
				}
			}
		},
		{
			"id": 15470,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 15471,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 15472,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15473,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15474,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15475,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15476,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15477,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15478,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15479,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15472,
								15473,
								15474,
								15475,
								15476,
								15477,
								15478,
								15479
							]
						}
					]
				}
			}
		},
		{
			"id": 15466,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15467,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15468,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15469,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15467,
						15468,
						15469
					]
				}
			]
		},
		{
			"id": 15414,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15415,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15416,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 15466,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15466,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 15417,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 15418,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 15419,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15420,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														15419,
														15420
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 15421,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 15422,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15470,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 15423,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 15424,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 15425,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 15426,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 15427,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 15470,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											15425,
											15426,
											15427
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 15428,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15415,
						15416,
						15417,
						15421,
						15422,
						15423,
						15428
					]
				}
			]
		},
		{
			"id": 15498,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 15504,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 15499,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 15500,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 15503,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 15504,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 15501,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"signatures": [
												{
													"id": 15502,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 15504,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 15432,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 15433,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15434,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 15435,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 15436,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 15437,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15434,
										15435,
										15436,
										15437
									]
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 15330,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 15414,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 15331,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15332,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 15333,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15429,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 15334,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 15335,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 15336,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 15337,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 15338,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 15339,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 15340,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 15341,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 15342,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							15340,
																							15341,
																							15342
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 15343,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 15429,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															15336,
															15337,
															15338,
															15343
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 15344,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 15345,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 15346,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 15347,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 15348,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 15349,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 15350,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 15351,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 15352,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15353,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15354,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 15432,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														15352,
														15353,
														15354
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15332,
										15333,
										15334,
										15344,
										15345,
										15346,
										15347,
										15348,
										15349,
										15350
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 15429,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 15470,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 15430,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15431,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15431
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 14874,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14875,
					"name": "__joinerConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 14876,
							"name": "__joinerConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"type": {
								"type": "reference",
								"target": 15330,
								"name": "ModuleJoinerConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 14877,
					"name": "__hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14878,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14879,
									"name": "onApplicationStart",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 14880,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 14881,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 14882,
									"name": "onApplicationShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 14883,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 14884,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 14885,
									"name": "onApplicationPrepareShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 14886,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 14887,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14879,
										14882,
										14885
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14877
					]
				},
				{
					"title": "Methods",
					"children": [
						14875
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 14440,
					"name": "IProductModuleService"
				}
			]
		},
		{
			"id": 15360,
			"name": "ProductStatus",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "draft"
					},
					{
						"type": "literal",
						"value": "proposed"
					},
					{
						"type": "literal",
						"value": "published"
					},
					{
						"type": "literal",
						"value": "rejected"
					}
				]
			}
		},
		{
			"id": 14898,
			"name": "ProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product's data."
					}
				]
			},
			"children": [
				{
					"id": 14899,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14900,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14901,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14902,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14903,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14904,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14905,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15360,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14906,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14907,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 14908,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 14909,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 14910,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 14911,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14912,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14913,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14914,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14915,
					"name": "collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 15240,
								"name": "ProductCollectionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 14916,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product collection id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14917,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product categories."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15274,
									"name": "ProductCategoryDTO",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 14918,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 15076,
								"name": "ProductTypeDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 14919,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product type id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14920,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product tags."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15058,
							"name": "ProductTagDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 14921,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product variants."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15150,
							"name": "ProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 14922,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15099,
							"name": "ProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 14923,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product images."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15361,
							"name": "ProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 14924,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14925,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product in an external system. This is useful if you're integrating the product with a third-party service and want to maintain\na reference to the ID in the integrated service."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14926,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 14927,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 14928,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 14929,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14899,
						14900,
						14901,
						14902,
						14903,
						14904,
						14905,
						14906,
						14907,
						14908,
						14909,
						14910,
						14911,
						14912,
						14913,
						14914,
						14915,
						14916,
						14917,
						14918,
						14919,
						14920,
						14921,
						14922,
						14923,
						14924,
						14925,
						14926,
						14927,
						14928,
						14929
					]
				}
			]
		},
		{
			"id": 15150,
			"name": "ProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant's data."
					}
				]
			},
			"children": [
				{
					"id": 15151,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15152,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15153,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15154,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15155,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15156,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15157,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15158,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15159,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15160,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15161,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15162,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15163,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15164,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15165,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15166,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15167,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15168,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15135,
							"name": "ProductOptionValueDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 15169,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15170,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 14898,
								"name": "ProductDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 15171,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15172,
					"name": "variant_rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "he ranking of the variant among other variants associated with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15173,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15174,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15175,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15151,
						15152,
						15153,
						15154,
						15155,
						15156,
						15157,
						15158,
						15159,
						15160,
						15161,
						15162,
						15163,
						15164,
						15165,
						15166,
						15167,
						15168,
						15169,
						15170,
						15171,
						15172,
						15173,
						15174,
						15175
					]
				}
			]
		},
		{
			"id": 15274,
			"name": "ProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product category's data."
					}
				]
			},
			"children": [
				{
					"id": 15275,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15276,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15277,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15278,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15279,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15280,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15281,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the product category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15282,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the product category among sibling categories."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15283,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated parent category."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 15274,
								"name": "ProductCategoryDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 15284,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated parent category id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15285,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated child categories."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15274,
							"name": "ProductCategoryDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 15286,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 14898,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 15287,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15288,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15289,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15275,
						15276,
						15277,
						15278,
						15279,
						15280,
						15281,
						15282,
						15283,
						15284,
						15285,
						15286,
						15287,
						15288,
						15289
					]
				}
			]
		},
		{
			"id": 15302,
			"name": "CreateProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product category to create."
					}
				]
			},
			"children": [
				{
					"id": 15303,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15304,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15305,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's handle."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15306,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15307,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15308,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15309,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category, if it has any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15310,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15303,
						15304,
						15305,
						15306,
						15307,
						15308,
						15309,
						15310
					]
				}
			]
		},
		{
			"id": 15311,
			"name": "UpsertProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product category."
					}
				]
			},
			"children": [
				{
					"id": 15312,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product category to update. If not provided, the product category is created. In this case, the "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15313,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15322,
						"name": "UpdateProductCategoryDTO.name"
					}
				},
				{
					"id": 15314,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15323,
						"name": "UpdateProductCategoryDTO.description"
					}
				},
				{
					"id": 15315,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15324,
						"name": "UpdateProductCategoryDTO.handle"
					}
				},
				{
					"id": 15316,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15325,
						"name": "UpdateProductCategoryDTO.is_active"
					}
				},
				{
					"id": 15317,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15326,
						"name": "UpdateProductCategoryDTO.is_internal"
					}
				},
				{
					"id": 15318,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15327,
						"name": "UpdateProductCategoryDTO.rank"
					}
				},
				{
					"id": 15319,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category, if it has any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15328,
						"name": "UpdateProductCategoryDTO.parent_category_id"
					}
				},
				{
					"id": 15320,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15329,
						"name": "UpdateProductCategoryDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15312,
						15313,
						15314,
						15315,
						15316,
						15317,
						15318,
						15319,
						15320
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15321,
					"name": "UpdateProductCategoryDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15321,
			"name": "UpdateProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product category."
					}
				]
			},
			"children": [
				{
					"id": 15322,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15323,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15324,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15325,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15326,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15327,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15328,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category, if it has any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15329,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15322,
						15323,
						15324,
						15325,
						15326,
						15327,
						15328,
						15329
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15311,
					"name": "UpsertProductCategoryDTO"
				}
			]
		},
		{
			"id": 15058,
			"name": "ProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag's data."
					}
				]
			},
			"children": [
				{
					"id": 15059,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15060,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15061,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15062,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 14898,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15059,
						15060,
						15061,
						15062
					]
				}
			]
		},
		{
			"id": 15240,
			"name": "ProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product collection's data."
					}
				]
			},
			"children": [
				{
					"id": 15241,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15242,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15243,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15244,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15245,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15246,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15247,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15248,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 14898,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15241,
						15242,
						15243,
						15244,
						15245,
						15246,
						15247,
						15248
					]
				}
			]
		},
		{
			"id": 15076,
			"name": "ProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type's data."
					}
				]
			},
			"children": [
				{
					"id": 15077,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15078,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15079,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15080,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15081,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15082,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15077,
						15078,
						15079,
						15080,
						15081,
						15082
					]
				}
			]
		},
		{
			"id": 15099,
			"name": "ProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option's data."
					}
				]
			},
			"children": [
				{
					"id": 15100,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15101,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15102,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 14898,
								"name": "ProductDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 15103,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15104,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option values."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15135,
							"name": "ProductOptionValueDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 15105,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15106,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15107,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15108,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15100,
						15101,
						15102,
						15103,
						15104,
						15105,
						15106,
						15107,
						15108
					]
				}
			]
		},
		{
			"id": 15361,
			"name": "ProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product image's data."
					}
				]
			},
			"children": [
				{
					"id": 15362,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15363,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15364,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rank of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15365,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15366,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15367,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15368,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15362,
						15363,
						15364,
						15365,
						15366,
						15367,
						15368
					]
				}
			]
		},
		{
			"id": 15135,
			"name": "ProductOptionValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product option value's data."
					}
				]
			},
			"children": [
				{
					"id": 15136,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15137,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product option value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15138,
					"name": "option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option. It may only be available if the "
							},
							{
								"kind": "code",
								"text": "`option`"
							},
							{
								"kind": "text",
								"text": " relation is expanded."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 15099,
								"name": "ProductOptionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 15139,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15140,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15141,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15142,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15143,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15136,
						15137,
						15138,
						15139,
						15140,
						15141,
						15142,
						15143
					]
				}
			]
		},
		{
			"id": 14943,
			"name": "FilterableProductProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 14970,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 14943,
									"name": "FilterableProductProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 14943,
											"name": "FilterableProductProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15385,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 14971,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 14943,
									"name": "FilterableProductProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 14943,
											"name": "FilterableProductProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15386,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 14944,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the products' attributes, such as titles and descriptions, using this search term."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14945,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status to filter products by"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 15360,
								"name": "ProductStatus",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15360,
									"name": "ProductStatus",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 14946,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The titles to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 14947,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 14948,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 14949,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The external IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 14950,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters only or excluding gift card products"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14951,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters on a product's tags."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14952,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14953,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Filter a product by the IDs of their associated tags."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14953
									]
								}
							]
						}
					}
				},
				{
					"id": 14954,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters on a product's variant properties."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14955,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14956,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 14957,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 14958,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14959,
													"name": "option_id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														14958,
														14959
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14956
									]
								}
							]
						}
					}
				},
				{
					"id": 14960,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter a product by the ID of the associated type"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 14961,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter a product by the IDs of their associated categories."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 14962,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14963,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 15388,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "OperatorMap",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												14963
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 14964,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14965,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 15388,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "OperatorMap",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												14965
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 14966,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product by its associated collections."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 15388,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 14967,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product based on when it was created"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15388,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14968,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product based on when it was updated"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15388,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14969,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters soft-deleted products based on the date they were deleted at."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15388,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14970,
						14971,
						14944,
						14945,
						14946,
						14947,
						14948,
						14949,
						14950,
						14951,
						14954,
						14960,
						14961,
						14966,
						14967,
						14968,
						14969
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15384,
					"typeArguments": [
						{
							"type": "reference",
							"target": 14943,
							"name": "FilterableProductProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15063,
			"name": "FilterableProductTagProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product tags."
					}
				]
			},
			"children": [
				{
					"id": 15067,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15063,
									"name": "FilterableProductTagProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15063,
											"name": "FilterableProductTagProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15385,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 15068,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15063,
									"name": "FilterableProductTagProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15063,
											"name": "FilterableProductTagProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15386,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 15064,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the tags' values."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15065,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15066,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15067,
						15068,
						15064,
						15065,
						15066
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15384,
					"typeArguments": [
						{
							"type": "reference",
							"target": 15063,
							"name": "FilterableProductTagProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15083,
			"name": "FilterableProductTypeProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product types."
					}
				]
			},
			"children": [
				{
					"id": 15087,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15083,
									"name": "FilterableProductTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15083,
											"name": "FilterableProductTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15385,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 15088,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15083,
									"name": "FilterableProductTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15083,
											"name": "FilterableProductTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15386,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 15084,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the types' values."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15085,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15086,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to filter product types by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15087,
						15088,
						15084,
						15085,
						15086
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15384,
					"typeArguments": [
						{
							"type": "reference",
							"target": 15083,
							"name": "FilterableProductTypeProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15109,
			"name": "FilterableProductOptionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product options."
					}
				]
			},
			"children": [
				{
					"id": 15114,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15109,
									"name": "FilterableProductOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15109,
											"name": "FilterableProductOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15385,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 15115,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15109,
									"name": "FilterableProductOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15109,
											"name": "FilterableProductOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15386,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 15110,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the options' titles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15111,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15112,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The titles to filter product options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15113,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the product options by their associated products' IDs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15114,
						15115,
						15110,
						15111,
						15112,
						15113
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15384,
					"typeArguments": [
						{
							"type": "reference",
							"target": 15109,
							"name": "FilterableProductOptionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15129,
			"name": "FilterableProductOptionValueProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product option values."
					}
				]
			},
			"children": [
				{
					"id": 15133,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15129,
									"name": "FilterableProductOptionValueProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15129,
											"name": "FilterableProductOptionValueProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15385,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 15134,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15129,
									"name": "FilterableProductOptionValueProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15129,
											"name": "FilterableProductOptionValueProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15386,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 15130,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the option values' values."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15131,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15132,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values to filter product options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15133,
						15134,
						15130,
						15131,
						15132
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15384,
					"typeArguments": [
						{
							"type": "reference",
							"target": 15129,
							"name": "FilterableProductOptionValueProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15249,
			"name": "FilterableProductCollectionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 15254,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15249,
									"name": "FilterableProductCollectionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15249,
											"name": "FilterableProductCollectionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15385,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 15255,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15249,
									"name": "FilterableProductCollectionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15249,
											"name": "FilterableProductCollectionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15386,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 15250,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the collections' titles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15251,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product collections by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15252,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter product collections by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15253,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title to filter product collections by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15254,
						15255,
						15250,
						15251,
						15252,
						15253
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15384,
					"typeArguments": [
						{
							"type": "reference",
							"target": 15249,
							"name": "FilterableProductCollectionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15176,
			"name": "FilterableProductVariantProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product variants."
					}
				]
			},
			"children": [
				{
					"id": 15182,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15176,
									"name": "FilterableProductVariantProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15176,
											"name": "FilterableProductVariantProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15385,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 15183,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15176,
									"name": "FilterableProductVariantProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15176,
											"name": "FilterableProductVariantProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15386,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 15177,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the title and different code attributes on the variant"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15178,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15179,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKUs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15180,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the product variants by their associated products' IDs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15181,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by their associated options."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15182,
						15183,
						15177,
						15178,
						15179,
						15180,
						15181
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15384,
					"typeArguments": [
						{
							"type": "reference",
							"target": 15176,
							"name": "FilterableProductVariantProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15290,
			"name": "FilterableProductCategoryProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product categories."
					}
				]
			},
			"children": [
				{
					"id": 15300,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15290,
									"name": "FilterableProductCategoryProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15290,
											"name": "FilterableProductCategoryProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15385,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 15301,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 15290,
									"name": "FilterableProductCategoryProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 15384,
									"typeArguments": [
										{
											"type": "reference",
											"target": 15290,
											"name": "FilterableProductCategoryProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15386,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 15291,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories based on searchable fields"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15292,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product categories by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15293,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter product categories by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15294,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by their parent category's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15295,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter product categories by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 15296,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15297,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're internal."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15298,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include children of retrieved product categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15299,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include parents of retrieved product categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15300,
						15301,
						15291,
						15292,
						15293,
						15294,
						15295,
						15296,
						15297,
						15298,
						15299
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15384,
					"typeArguments": [
						{
							"type": "reference",
							"target": 15290,
							"name": "FilterableProductCategoryProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15256,
			"name": "CreateProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product collection to create."
					}
				]
			},
			"children": [
				{
					"id": 15257,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15258,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection's handle. If not provided, the value of this attribute is set to the slug version of the title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15259,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products to associate with the collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 15260,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15257,
						15258,
						15259,
						15260
					]
				}
			]
		},
		{
			"id": 15261,
			"name": "UpsertProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product collection to create or update."
					}
				]
			},
			"children": [
				{
					"id": 15262,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product collection to update. If not provided,\nthe product collection is created. In this case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " property is\nrequired."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15263,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15269,
						"name": "UpdateProductCollectionDTO.value"
					}
				},
				{
					"id": 15264,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15270,
						"name": "UpdateProductCollectionDTO.title"
					}
				},
				{
					"id": 15265,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15271,
						"name": "UpdateProductCollectionDTO.handle"
					}
				},
				{
					"id": 15266,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to associate with the product collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15272,
						"name": "UpdateProductCollectionDTO.product_ids"
					}
				},
				{
					"id": 15267,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15273,
						"name": "UpdateProductCollectionDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15262,
						15263,
						15264,
						15265,
						15266,
						15267
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15268,
					"name": "UpdateProductCollectionDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15268,
			"name": "UpdateProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product collection. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product collection to update."
					}
				]
			},
			"children": [
				{
					"id": 15269,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15270,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15271,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15272,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to associate with the product collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 15273,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15269,
						15270,
						15271,
						15272,
						15273
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15261,
					"name": "UpsertProductCollectionDTO"
				}
			]
		},
		{
			"id": 15089,
			"name": "CreateProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type to create."
					}
				]
			},
			"children": [
				{
					"id": 15090,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15091,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15090,
						15091
					]
				}
			]
		},
		{
			"id": 15092,
			"name": "UpsertProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type to create or update"
					}
				]
			},
			"children": [
				{
					"id": 15093,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type's ID. If provided, the product\ntag is updated. Otheriwse, it's created.\nIn that case, the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15094,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15097,
						"name": "UpdateProductTypeDTO.value"
					}
				},
				{
					"id": 15095,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15098,
						"name": "UpdateProductTypeDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15093,
						15094,
						15095
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15096,
					"name": "UpdateProductTypeDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15096,
			"name": "UpdateProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product type. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product type to update."
					}
				]
			},
			"children": [
				{
					"id": 15097,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15098,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15097,
						15098
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15092,
					"name": "UpsertProductTypeDTO"
				}
			]
		},
		{
			"id": 15410,
			"name": "UpsertProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product image to create or update."
					}
				]
			},
			"children": [
				{
					"id": 15411,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product image's ID. If not provided, the image is created. In\nthat case, the "
							},
							{
								"kind": "code",
								"text": "`url`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15412,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new URL of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15464,
						"name": "UpdateProductImageDTO.url"
					}
				},
				{
					"id": 15413,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15465,
						"name": "UpdateProductImageDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15411,
						15412,
						15413
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15463,
					"name": "UpdateProductImageDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15463,
			"name": "UpdateProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product image. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product image to update."
					}
				]
			},
			"children": [
				{
					"id": 15464,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new URL of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15465,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15464,
						15465
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15410,
					"name": "UpsertProductImageDTO"
				}
			]
		},
		{
			"id": 15069,
			"name": "CreateProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag to create."
					}
				]
			},
			"children": [
				{
					"id": 15070,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15070
					]
				}
			]
		},
		{
			"id": 15071,
			"name": "UpsertProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag to create or update."
					}
				]
			},
			"children": [
				{
					"id": 15072,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product tag to update. If not provided, the tag\nis created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15073,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15075,
						"name": "UpdateProductTagDTO.value"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15072,
						15073
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15074,
					"name": "UpdateProductTagDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15074,
			"name": "UpdateProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product tag. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product tag to update."
					}
				]
			},
			"children": [
				{
					"id": 15075,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15075
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15071,
					"name": "UpsertProductTagDTO"
				}
			]
		},
		{
			"id": 15116,
			"name": "CreateProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option to create."
					}
				]
			},
			"children": [
				{
					"id": 15117,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15118,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 15119,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15117,
						15118,
						15119
					]
				}
			]
		},
		{
			"id": 15144,
			"name": "CreateProductOptionValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15145,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product option value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15146,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata of the product option value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15145,
						15146
					]
				}
			]
		},
		{
			"id": 15120,
			"name": "UpsertProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option to create or update."
					}
				]
			},
			"children": [
				{
					"id": 15121,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option to update. If not provided, the product\noption is created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": " properties are\nrequired."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15122,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15126,
						"name": "UpdateProductOptionDTO.title"
					}
				},
				{
					"id": 15123,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15127,
						"name": "UpdateProductOptionDTO.values"
					}
				},
				{
					"id": 15124,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15128,
						"name": "UpdateProductOptionDTO.product_id"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15121,
						15122,
						15123,
						15124
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15125,
					"name": "UpdateProductOptionDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15125,
			"name": "UpdateProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15126,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15127,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 15128,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15126,
						15127,
						15128
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15120,
					"name": "UpsertProductOptionDTO"
				}
			]
		},
		{
			"id": 15147,
			"name": "UpdateProductOptionValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15148,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product option value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15149,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata of the product option value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15148,
						15149
					]
				}
			]
		},
		{
			"id": 15184,
			"name": "CreateProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant to create."
					}
				]
			},
			"children": [
				{
					"id": 15185,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15186,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15187,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15188,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15189,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15190,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15191,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15192,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15193,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15194,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15195,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15196,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15197,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15198,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15199,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15200,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15201,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options of the variant. Each key is an option's title, and value\nis an option's value. If an option with the specified title doesn't exist,\na new one is created."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n`{ Color: \"Blue\" }`\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 15202,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15185,
						15186,
						15187,
						15188,
						15189,
						15190,
						15191,
						15192,
						15193,
						15194,
						15195,
						15196,
						15197,
						15198,
						15199,
						15200,
						15201,
						15202
					]
				}
			]
		},
		{
			"id": 15203,
			"name": "UpsertProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant to create or update."
					}
				]
			},
			"children": [
				{
					"id": 15204,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15205,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15223,
						"name": "UpdateProductVariantDTO.title"
					}
				},
				{
					"id": 15206,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15224,
						"name": "UpdateProductVariantDTO.sku"
					}
				},
				{
					"id": 15207,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15225,
						"name": "UpdateProductVariantDTO.barcode"
					}
				},
				{
					"id": 15208,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15226,
						"name": "UpdateProductVariantDTO.ean"
					}
				},
				{
					"id": 15209,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15227,
						"name": "UpdateProductVariantDTO.upc"
					}
				},
				{
					"id": 15210,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15228,
						"name": "UpdateProductVariantDTO.allow_backorder"
					}
				},
				{
					"id": 15211,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15229,
						"name": "UpdateProductVariantDTO.manage_inventory"
					}
				},
				{
					"id": 15212,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15230,
						"name": "UpdateProductVariantDTO.hs_code"
					}
				},
				{
					"id": 15213,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15231,
						"name": "UpdateProductVariantDTO.origin_country"
					}
				},
				{
					"id": 15214,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15232,
						"name": "UpdateProductVariantDTO.mid_code"
					}
				},
				{
					"id": 15215,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15233,
						"name": "UpdateProductVariantDTO.material"
					}
				},
				{
					"id": 15216,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15234,
						"name": "UpdateProductVariantDTO.weight"
					}
				},
				{
					"id": 15217,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15235,
						"name": "UpdateProductVariantDTO.length"
					}
				},
				{
					"id": 15218,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15236,
						"name": "UpdateProductVariantDTO.height"
					}
				},
				{
					"id": 15219,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15237,
						"name": "UpdateProductVariantDTO.width"
					}
				},
				{
					"id": 15220,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant options to associate with the product variant."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15238,
						"name": "UpdateProductVariantDTO.options"
					}
				},
				{
					"id": 15221,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15239,
						"name": "UpdateProductVariantDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15204,
						15205,
						15206,
						15207,
						15208,
						15209,
						15210,
						15211,
						15212,
						15213,
						15214,
						15215,
						15216,
						15217,
						15218,
						15219,
						15220,
						15221
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15222,
					"name": "UpdateProductVariantDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15222,
			"name": "UpdateProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product variant. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product variant to update."
					}
				]
			},
			"children": [
				{
					"id": 15223,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15224,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15225,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15226,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15227,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15228,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15229,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15230,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15231,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15232,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15233,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15234,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15235,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15236,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15237,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15238,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant options to associate with the product variant."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 15239,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15223,
						15224,
						15225,
						15226,
						15227,
						15228,
						15229,
						15230,
						15231,
						15232,
						15233,
						15234,
						15235,
						15236,
						15237,
						15238,
						15239
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15203,
					"name": "UpsertProductVariantDTO"
				}
			]
		},
		{
			"id": 14972,
			"name": "CreateProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product to create."
					}
				]
			},
			"children": [
				{
					"id": 14973,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optionally pass an ID when creating a product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14974,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14975,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14976,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14977,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14978,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14979,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14980,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14981,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15360,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14982,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to created or updated."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15410,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 14983,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the product in an external system"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14984,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type id to associate with the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14985,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14986,
					"name": "tag_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tags to be associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 14987,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 14988,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product options to be created and associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15116,
							"name": "CreateProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 14989,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15184,
							"name": "CreateProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 14990,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14991,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14992,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14993,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14994,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14995,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14996,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14997,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14998,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14973,
						14974,
						14975,
						14976,
						14977,
						14978,
						14979,
						14980,
						14981,
						14982,
						14983,
						14984,
						14985,
						14986,
						14987,
						14988,
						14989,
						14990,
						14991,
						14992,
						14993,
						14994,
						14995,
						14996,
						14997,
						14998
					]
				}
			]
		},
		{
			"id": 14999,
			"name": "UpsertProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 15000,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product to update. If not provided, a product\nis created instead. In that case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15001,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15027,
						"name": "UpdateProductDTO.title"
					}
				},
				{
					"id": 15002,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15028,
						"name": "UpdateProductDTO.subtitle"
					}
				},
				{
					"id": 15003,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15029,
						"name": "UpdateProductDTO.description"
					}
				},
				{
					"id": 15004,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15030,
						"name": "UpdateProductDTO.is_giftcard"
					}
				},
				{
					"id": 15005,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15031,
						"name": "UpdateProductDTO.discountable"
					}
				},
				{
					"id": 15006,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15032,
						"name": "UpdateProductDTO.thumbnail"
					}
				},
				{
					"id": 15007,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15033,
						"name": "UpdateProductDTO.handle"
					}
				},
				{
					"id": 15008,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15360,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15034,
						"name": "UpdateProductDTO.status"
					}
				},
				{
					"id": 15009,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15410,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15035,
						"name": "UpdateProductDTO.images"
					}
				},
				{
					"id": 15010,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the product in an external system"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15036,
						"name": "UpdateProductDTO.external_id"
					}
				},
				{
					"id": 15011,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15037,
						"name": "UpdateProductDTO.type_id"
					}
				},
				{
					"id": 15012,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15038,
						"name": "UpdateProductDTO.collection_id"
					}
				},
				{
					"id": 15013,
					"name": "tag_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tags to associate with the product"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15039,
						"name": "UpdateProductDTO.tag_ids"
					}
				},
				{
					"id": 15014,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15040,
						"name": "UpdateProductDTO.category_ids"
					}
				},
				{
					"id": 15015,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated options to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15120,
							"name": "UpsertProductOptionDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15041,
						"name": "UpdateProductDTO.options"
					}
				},
				{
					"id": 15016,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product.\nYou can also update existing product variants associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15203,
							"name": "UpsertProductVariantDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15042,
						"name": "UpdateProductDTO.variants"
					}
				},
				{
					"id": 15017,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15043,
						"name": "UpdateProductDTO.width"
					}
				},
				{
					"id": 15018,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15044,
						"name": "UpdateProductDTO.height"
					}
				},
				{
					"id": 15019,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15045,
						"name": "UpdateProductDTO.length"
					}
				},
				{
					"id": 15020,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15046,
						"name": "UpdateProductDTO.weight"
					}
				},
				{
					"id": 15021,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15047,
						"name": "UpdateProductDTO.origin_country"
					}
				},
				{
					"id": 15022,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15048,
						"name": "UpdateProductDTO.hs_code"
					}
				},
				{
					"id": 15023,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15049,
						"name": "UpdateProductDTO.material"
					}
				},
				{
					"id": 15024,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15050,
						"name": "UpdateProductDTO.mid_code"
					}
				},
				{
					"id": 15025,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 15051,
						"name": "UpdateProductDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15000,
						15001,
						15002,
						15003,
						15004,
						15005,
						15006,
						15007,
						15008,
						15009,
						15010,
						15011,
						15012,
						15013,
						15014,
						15015,
						15016,
						15017,
						15018,
						15019,
						15020,
						15021,
						15022,
						15023,
						15024,
						15025
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 15026,
					"name": "UpdateProductDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15026,
			"name": "UpdateProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product."
					}
				]
			},
			"children": [
				{
					"id": 15027,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15028,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15029,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15030,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15031,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 15032,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15033,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15034,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15360,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15035,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15410,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 15036,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the product in an external system"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15037,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15038,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15039,
					"name": "tag_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tags to associate with the product"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 15040,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 15041,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated options to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15120,
							"name": "UpsertProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 15042,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product.\nYou can also update existing product variants associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 15203,
							"name": "UpsertProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 15043,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15044,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15045,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15046,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 15047,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15048,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15049,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15050,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15051,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15369,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15027,
						15028,
						15029,
						15030,
						15031,
						15032,
						15033,
						15034,
						15035,
						15036,
						15037,
						15038,
						15039,
						15040,
						15041,
						15042,
						15043,
						15044,
						15045,
						15046,
						15047,
						15048,
						15049,
						15050,
						15051
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 14999,
					"name": "UpsertProductDTO"
				}
			]
		},
		{
			"id": 14440,
			"name": "IProductModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Product Module."
					}
				]
			},
			"children": [
				{
					"id": 14441,
					"name": "retrieveProduct",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14442,
							"name": "retrieveProduct",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product by its ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst product =\n  await productModuleService.retrieveProduct(\"prod_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.retrieveProduct(\n  \"prod_123\",\n  {\n    relations: [\"categories\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14443,
									"name": "productId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14444,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14898,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14445,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 14898,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14446,
					"name": "listProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14447,
							"name": "listProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of products based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of products using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.listProducts({\n  id: [\"prod_123\", \"prod_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.listProducts(\n  {\n    id: [\"prod_123\", \"prod_321\"],\n  },\n  {\n    relations: [\"categories\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.listProducts(\n  {\n    id: [\"prod_123\", \"prod_321\"],\n  },\n  {\n    relations: [\"categories\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14448,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved products."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14943,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14449,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the products are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14898,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14450,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14898,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14451,
					"name": "listAndCountProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14452,
							"name": "listAndCountProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of products along with the total count of available products satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of products along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of products using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCountProducts({\n    id: [\"prod_123\", \"prod_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCountProducts(\n    {\n      id: [\"prod_123\", \"prod_321\"],\n    },\n    {\n      relations: [\"categories\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCountProducts(\n    {\n      id: [\"prod_123\", \"prod_321\"],\n    },\n    {\n      relations: [\"categories\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14453,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved products."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14943,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14454,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the products are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14898,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14455,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14898,
													"name": "ProductDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14456,
					"name": "createProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14457,
							"name": "createProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a list of products."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.createProducts([\n  {\n    title: \"Shirt\",\n  },\n  {\n    title: \"Pants\",\n    handle: \"pants\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14458,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The products to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14972,
											"name": "CreateProductDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14459,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14898,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14460,
							"name": "createProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.createProducts({\n  title: \"Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14461,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14972,
										"name": "CreateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14462,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 14898,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14463,
					"name": "upsertProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14464,
							"name": "upsertProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing products, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.upsertProducts([\n  {\n    id: \"prod_123\",\n    handle: \"pant\",\n  },\n  {\n    title: \"Shirt\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14465,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each product."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14999,
											"name": "UpsertProductDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14466,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14898,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14467,
							"name": "upsertProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates the product if it exists, or creates a new ones if it doesn't."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.upsertProducts({\n  title: \"Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14468,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the new product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14999,
										"name": "UpsertProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14469,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 14898,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14470,
					"name": "updateProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14471,
							"name": "updateProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a product."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.updateProducts(\n  \"prod_123\",\n  {\n    handle: \"pant\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14472,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14473,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the product to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15026,
										"name": "UpdateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14474,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 14898,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14475,
							"name": "updateProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of products matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.updateProducts(\n  {\n    title: \"Pant\",\n  },\n  {\n    handle: \"pant\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14476,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which products to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14943,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14477,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected products"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15026,
										"name": "UpdateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14478,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14898,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14479,
					"name": "deleteProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14480,
							"name": "deleteProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete products. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method, this method will completely remove the products and they can no longer be accessed or retrieved."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the products are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProducts([\"prod_123\", \"prod_321\"])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14481,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14482,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14483,
					"name": "softDeleteProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14484,
							"name": "softDeleteProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete products. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the product. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted products can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of associated product variants. The object's keys are the ID attribute names of the product entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated with the product through this relation, such as the IDs of associated product variants.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProducts([\n  \"prod_123\",\n  \"prod_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14485,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14486,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14487,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the products. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the product's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15052,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14485,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14488,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14489,
					"name": "restoreProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14490,
							"name": "restoreProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore products which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated product variants. The object's keys are the ID attribute names of the product entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of the record associated with the product through this relation, such as the IDs of associated product variants.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProducts([\"prod_123\", \"prod_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14491,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14492,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14493,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the products. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the product's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15055,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14491,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14494,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14495,
					"name": "retrieveProductTag",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14496,
							"name": "retrieveProductTag",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a tag by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product tag by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tag = await productModuleService.retrieveProductTag(\"ptag_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tag = await productModuleService.retrieveProductTag(\n  \"ptag_123\",\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14497,
									"name": "tagId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the tag to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14498,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tag is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15058,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14499,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15058,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14500,
					"name": "listProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14501,
							"name": "listProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of tags based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product tags using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listProductTags({\n  id: [\"ptag_123\", \"ptag_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product tags:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listProductTags(\n  {\n    id: [\"ptag_123\", \"ptag_321\"],\n  },\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listProductTags(\n  {\n    id: [\"ptag_123\", \"ptag_321\"],\n  },\n  {\n    relations: [\"products\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14502,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product tags."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15063,
										"name": "FilterableProductTagProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14503,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tags are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15058,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14504,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15058,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14505,
					"name": "listAndCountProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14506,
							"name": "listAndCountProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product tags along with the total count of available product tags satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product tags along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product tags using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountProductTags({\n    id: [\"ptag_123\", \"ptag_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product tags:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountProductTags(\n    {\n      id: [\"ptag_123\", \"ptag_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountProductTags(\n    {\n      id: [\"ptag_123\", \"ptag_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14507,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product tags."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15063,
										"name": "FilterableProductTagProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14508,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tags are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15058,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14509,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15058,
													"name": "ProductTagDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14510,
					"name": "createProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14511,
							"name": "createProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product tag."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTags = await productModuleService.createProductTags([\n  {\n    value: \"digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14512,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product tags to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15069,
											"name": "CreateProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14513,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15058,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14514,
							"name": "createProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product tag."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTag = await productModuleService.createProductTags({\n  value: \"digital\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14515,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product tag to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15069,
										"name": "CreateProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14516,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15058,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14517,
					"name": "upsertProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14518,
							"name": "upsertProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing tags, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTags = await productModuleService.upsertProductTags([\n  {\n    id: \"ptag_123\",\n    metadata: {\n      test: true,\n    },\n  },\n  {\n    value: \"Digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14519,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each tag."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15071,
											"name": "UpsertProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14520,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15058,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14521,
							"name": "upsertProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing tag, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTag = await productModuleService.upsertProductTags({\n  id: \"ptag_123\",\n  metadata: {\n    test: true,\n  },\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14522,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15071,
										"name": "UpsertProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14523,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15058,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14524,
					"name": "updateProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14525,
							"name": "updateProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a tag."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTag = await productModuleService.updateProductTags(\n  \"ptag_123\",\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14526,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the tag to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14527,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the tag to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15074,
										"name": "UpdateProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14528,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15058,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14529,
							"name": "updateProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of tags matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTags = await productModuleService.updateProductTags(\n  {\n    id: [\"ptag_123\", \"ptag_321\"],\n  },\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14530,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which tags to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15063,
										"name": "FilterableProductTagProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14531,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected tags"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15074,
										"name": "UpdateProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14532,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15058,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14533,
					"name": "deleteProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14534,
							"name": "deleteProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete product tags by their ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product tags are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductTags([\n  \"ptag_123\",\n  \"ptag_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14535,
									"name": "productTagIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product tags to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14536,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14537,
					"name": "softDeleteProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14538,
							"name": "softDeleteProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete tags. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the tag. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted tags can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the tag entity's relations, and its value is an array of strings, each being the ID of a record associated with the tag through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductTags([\n  \"ptag_123\",\n  \"ptag_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14539,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14540,
									"name": "tagIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tags to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14541,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the tags. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tag's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15052,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14539,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14542,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14543,
					"name": "restoreProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14544,
							"name": "restoreProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore tags which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the tag entity's relations, and its value is an array of strings, each being the ID of the record associated with the tag through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductTags([\n  \"ptag_123\",\n  \"ptag_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14545,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14546,
									"name": "tagIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tags to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14547,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the tags. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tag's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15055,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14545,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14548,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14549,
					"name": "retrieveProductType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14550,
							"name": "retrieveProductType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product type by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType =\n  await productModuleService.retrieveProductType(\"ptyp_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14551,
									"name": "typeId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product type to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14552,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product type is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15076,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14553,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15076,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14554,
					"name": "listProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14555,
							"name": "listProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product types based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.listProductTypes({\n  id: [\"ptyp_123\", \"ptyp_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.listProductTypes(\n  {\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14556,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved product types."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15083,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14557,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product types are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15076,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14558,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15076,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14559,
					"name": "listAndCountProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14560,
							"name": "listAndCountProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product types along with the total count of available product types satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product types along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [productTypes, count] =\n  await productModuleService.listAndCountProductTypes({\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [productTypes, count] =\n  await productModuleService.listAndCountProductTypes(\n    {\n      id: [\"ptyp_123\", \"ptyp_321\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14561,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to be applied on the retrieved product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15083,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14562,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product types are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15076,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14563,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15076,
													"name": "ProductTypeDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14564,
					"name": "createProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14565,
							"name": "createProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.createProductTypes([\n  {\n    value: \"digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14566,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product types to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15089,
											"name": "CreateProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14567,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15076,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14568,
							"name": "createProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.createProductTypes({\n  value: \"digital\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14569,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product type to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15089,
										"name": "CreateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14570,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15076,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14571,
					"name": "upsertProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14572,
							"name": "upsertProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing types, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.upsertProductTypes([\n  {\n    id: \"ptyp_123\",\n    metadata: {\n      test: true,\n    },\n  },\n  {\n    value: \"Digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14573,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each type."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15092,
											"name": "UpsertProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14574,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15076,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14575,
							"name": "upsertProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing type, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.upsertProductTypes({\n  id: \"ptyp_123\",\n  metadata: {\n    test: true,\n  },\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14576,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15092,
										"name": "UpsertProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14577,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15076,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14578,
					"name": "updateProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14579,
							"name": "updateProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.updateProductTypes(\n  \"ptyp_123\",\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14580,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the type to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14581,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the type to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15096,
										"name": "UpdateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14582,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15076,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14583,
							"name": "updateProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of types matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.updateProductTypes(\n  {\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  },\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14584,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which types to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15083,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14585,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected types"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15096,
										"name": "UpdateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14586,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15076,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14587,
					"name": "deleteProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14588,
							"name": "deleteProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product types are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14589,
									"name": "productTypeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product types to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14590,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14591,
					"name": "softDeleteProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14592,
							"name": "softDeleteProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete types. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the type. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted types can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the type entity's relations, and its value is an array of strings, each being the ID of a record associated with the type through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14593,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14594,
									"name": "typeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the types to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14595,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the types. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the type's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15052,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14593,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14596,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14597,
					"name": "restoreProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14598,
							"name": "restoreProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore types which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the type entity's relations, and its value is an array of strings, each being the ID of the record associated with the type through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14599,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14600,
									"name": "typeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the types to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14601,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the types. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the type's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15055,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14599,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14602,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14603,
					"name": "retrieveProductOption",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14604,
							"name": "retrieveProductOption",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product option by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product option by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst option =\n  await productModuleService.retrieveProductOption(\"opt_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.retrieveProductOption(\n  \"opt_123\",\n  {\n    relations: [\"product\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14605,
									"name": "optionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product option to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14606,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product option is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15099,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14607,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15099,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14608,
					"name": "listProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14609,
							"name": "listProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product options based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product options using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptions({\n id: [\"opt_123\", \"opt_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product options:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptions(\n  {\n    id: [\"opt_123\", \"opt_321\"],\n  },\n  {\n    relations: [\"product\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptions(\n  {\n    id: [\"opt_123\", \"opt_321\"],\n  },\n  {\n    relations: [\"product\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14610,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15109,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14611,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product options are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15099,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14612,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15099,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14613,
					"name": "listAndCountProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14614,
							"name": "listAndCountProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product options along with the total count of available product options satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product options along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product options using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptions({\n    id: [\"opt_123\", \"opt_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptions(\n    {\n      id: [\"opt_123\", \"opt_321\"],\n    },\n    {\n      relations: [\"product\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptions(\n    {\n      id: [\"opt_123\", \"opt_321\"],\n    },\n    {\n      relations: [\"product\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14615,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15109,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14616,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product options are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15099,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14617,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15099,
													"name": "ProductOptionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14618,
					"name": "createProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14619,
							"name": "createProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product options."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.createProductOptions([\n  {\n    title: \"Color\",\n    values: [\"Blue\", \"Green\"],\n    product_id: \"prod_123\",\n  },\n  {\n    title: \"Size\",\n    values: [\"Small\", \"Medium\"],\n    product_id: \"prod_321\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14620,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product options to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15116,
											"name": "CreateProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14621,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15099,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14622,
							"name": "createProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.createProductOptions({\n  title: \"Color\",\n  values: [\"Blue\", \"Green\"],\n  product_id: \"prod_123\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14623,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product option to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15116,
										"name": "CreateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14624,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15099,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14625,
					"name": "upsertProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14626,
							"name": "upsertProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing options, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.upsertProductOptions([\n  {\n    id: \"opt_123\",\n    title: \"Color\",\n  },\n  {\n    title: \"Color\",\n    values: [\"Blue\", \"Green\"],\n    product_id: \"prod_123\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14627,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each option."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15120,
											"name": "UpsertProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14628,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15099,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14629,
							"name": "upsertProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing option, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.upsertProductOptions({\n  id: \"opt_123\",\n  title: \"Color\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14630,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15120,
										"name": "UpsertProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14631,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15099,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14632,
					"name": "updateProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14633,
							"name": "updateProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.updateProductOptions(\n  \"opt_123\",\n  {\n    title: \"Color\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14634,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the option to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14635,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the option to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15125,
										"name": "UpdateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14636,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15099,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14637,
							"name": "updateProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of options matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.updateProductOptions(\n  {\n    title: \"Color\",\n  },\n  {\n    values: [\"Blue\", \"Green\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14638,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which options to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15109,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14639,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected options"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15125,
										"name": "UpdateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14640,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15099,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14641,
					"name": "deleteProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14642,
							"name": "deleteProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product options are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14643,
									"name": "productOptionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product options to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14644,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14645,
					"name": "softDeleteProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14646,
							"name": "softDeleteProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete options. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the option. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted options can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of a record associated with the option through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14647,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14648,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14649,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`option_value_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15052,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14647,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14650,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14651,
					"name": "restoreProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14652,
							"name": "restoreProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore options which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of the record associated with the option through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14653,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14654,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14655,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15055,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14653,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14656,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14657,
					"name": "listProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14658,
							"name": "listProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product option values based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product option values."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product option values using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptionValues({\n id: [\"optval_123\", \"optval_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product option values:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptionValues(\n  {\n    id: [\"optval_123\", \"optval_321\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptionValues(\n  {\n    id: [\"optval_123\", \"optval_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14659,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product option values."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15129,
										"name": "FilterableProductOptionValueProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14660,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product option values are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15135,
												"name": "ProductOptionValueDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14661,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15135,
											"name": "ProductOptionValueDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14662,
					"name": "listAndCountProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14663,
							"name": "listAndCountProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product option values along with the total count of available product option values satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product option values along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product option values using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptionValues({\n    id: [\"optval_123\", \"optval_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptionValues(\n    {\n      id: [\"optval_123\", \"optval_321\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptionValues(\n    {\n      id: [\"optval_123\", \"optval_321\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14664,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product option values."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15129,
										"name": "FilterableProductOptionValueProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14665,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product option values are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15135,
												"name": "ProductOptionValueDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14666,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15135,
													"name": "ProductOptionValueDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14667,
					"name": "createProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14668,
							"name": "createProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product option values."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product option values."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.createProductOptionValues([\n  {\n    value: \"Blue\",\n    option_id: \"opt_123\",\n  },\n  {\n    value: \"Green\",\n    option_id: \"opt_123\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14669,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product option values to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15144,
											"name": "CreateProductOptionValueDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14670,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15135,
											"name": "ProductOptionValueDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14671,
							"name": "createProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.createProductOptionValues({\n  value: \"Blue\",\n  option_id: \"opt_123\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14672,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product option to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15144,
										"name": "CreateProductOptionValueDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14673,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15135,
										"name": "ProductOptionValueDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14674,
					"name": "updateProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14675,
							"name": "updateProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.updateProductOptionValues(\n  \"optval_123\",\n  {\n    value: \"Green\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14676,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the option to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14677,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the option to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15147,
										"name": "UpdateProductOptionValueDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14678,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15135,
										"name": "ProductOptionValueDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14679,
							"name": "updateProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of options matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.updateProductOptionValues(\n  {\n    value: \"Green\",\n  },\n  {\n    value: [\"Red\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14680,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which options to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15129,
										"name": "FilterableProductOptionValueProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14681,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected options"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15147,
										"name": "UpdateProductOptionValueDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14682,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15135,
											"name": "ProductOptionValueDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14683,
					"name": "deleteProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14684,
							"name": "deleteProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product option values are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductOptionValues([\n  \"optval_123\",\n  \"optval_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14685,
									"name": "productOptionValueIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product option values to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14686,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14687,
					"name": "softDeleteProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14688,
							"name": "softDeleteProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete options. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the option. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted options can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of a record associated with the option through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductOptionValues([\n  \"optval_123\",\n  \"optval_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14689,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14690,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14691,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`option_value_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15052,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14689,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14692,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14693,
					"name": "restoreProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14694,
							"name": "restoreProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore options which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of the record associated with the option through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductOptionValues([\n  \"optval_123\",\n  \"optval_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14695,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14696,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14697,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15055,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14695,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14698,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14699,
					"name": "retrieveProductVariant",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14700,
							"name": "retrieveProductVariant",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product variant by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product variant by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variant =\n  await productModuleService.retrieveProductVariant(\"variant_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.retrieveProductVariant(\n  \"variant_123\",\n  {\n    relations: [\"options\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14701,
									"name": "productVariantId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product variant to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14702,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variant is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15150,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14703,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15150,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14704,
					"name": "listProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14705,
							"name": "listProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product variants based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product variants using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listProductVariants({\n  id: [\"variant_123\", \"variant_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product variants:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listProductVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    relations: [\"options\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listProductVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    relations: [\"options\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14706,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product variants."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15176,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14707,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variants are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15150,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14708,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15150,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14709,
					"name": "listAndCountProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14710,
							"name": "listAndCountProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product variants along with the total count of available product variants satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product variants along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product variants using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountProductVariants({\n    id: [\"variant_123\", \"variant_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product variants:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountProductVariants(\n    {\n      id: [\"variant_123\", \"variant_321\"],\n    },\n    {\n      relations: [\"options\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountProductVariants(\n    {\n      id: [\"variant_123\", \"variant_321\"],\n    },\n    {\n      relations: [\"options\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14711,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product variants."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15176,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14712,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variants are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15150,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14713,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15150,
													"name": "ProductVariantDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14714,
					"name": "createProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14715,
							"name": "createProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product variants."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.createProductVariants([\n  {\n    title: \"Blue Shirt\",\n    product_id: \"prod_123\",\n    options: {\n      Color: \"Blue\",\n    },\n  },\n  {\n    title: \"Green Shirt\",\n    product_id: \"prod_321\",\n    options: {\n      Color: \"Green\",\n    },\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14716,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variants to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15184,
											"name": "CreateProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14717,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15150,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14718,
							"name": "createProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product variant."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.createProductVariants({\n  title: \"Blue Shirt\",\n  product_id: \"prod_123\",\n  options: {\n    Color: \"Blue\",\n  },\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14719,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variant to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15184,
										"name": "CreateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14720,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15150,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14721,
					"name": "upsertProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14722,
							"name": "upsertProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing variants, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.upsertProductVariants([\n  {\n    id: \"variant_123\",\n    title: \"Green Shirt\",\n  },\n  {\n    title: \"Blue Shirt\",\n    options: {\n      Color: \"Blue\",\n    },\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14723,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each variant."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15203,
											"name": "UpsertProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14724,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15150,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14725,
							"name": "upsertProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing variant, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.upsertProductVariants({\n  id: \"variant_123\",\n  title: \"Green Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14726,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15203,
										"name": "UpsertProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14727,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15150,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14728,
					"name": "updateProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14729,
							"name": "updateProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a variant."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.updateProductVariants(\n  \"variant_123\",\n  {\n    title: \"Blue Shirt\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14730,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the variant to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14731,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the variant to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15222,
										"name": "UpdateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14732,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15150,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14733,
							"name": "updateProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of variants matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.updateProductVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    title: \"Blue Shirt\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14734,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which variants to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15176,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14735,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected variants"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15222,
										"name": "UpdateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14736,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15150,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14737,
					"name": "deleteProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14738,
							"name": "deleteProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete ProductVariant. This method will completely remove the ProductVariant and they can no longer be accessed or retrieved."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the ProductVariant are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14739,
									"name": "productVariantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the ProductVariant to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14740,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14741,
					"name": "softDeleteProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14742,
							"name": "softDeleteProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete variants. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the variant. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted variants can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the variant entity's relations, and its value is an array of strings, each being the ID of a record associated with the variant through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14743,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14744,
									"name": "variantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the variants to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14745,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the variants. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the variant's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`option_value_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15052,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14743,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14746,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14747,
					"name": "restoreProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14748,
							"name": "restoreProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore variants which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the variant entity's relations, and its value is an array of strings, each being the ID of the record associated with the variant through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14749,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14750,
									"name": "variantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the variants to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14751,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the variants. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the variant's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15055,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14749,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14752,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14753,
					"name": "retrieveProductCollection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14754,
							"name": "retrieveProductCollection",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product collection by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.retrieveProductCollection(\"pcol_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.retrieveProductCollection(\"pcol_123\", {\n    relations: [\"products\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14755,
									"name": "productCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product collection to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14756,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15240,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14757,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15240,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14758,
					"name": "listProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14759,
							"name": "listProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product collections based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product collections using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listProductCollections({\n    id: [\"pcol_123\", \"pcol_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product collections:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14760,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15249,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14761,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collections are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15240,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14762,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15240,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14763,
					"name": "listAndCountProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14764,
							"name": "listAndCountProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product collections along with the total count of available product collections satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product collections along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product collections using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountProductCollections({\n    id: [\"pcol_123\", \"pcol_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product collections:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14765,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15249,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14766,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collections are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15240,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14767,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15240,
													"name": "ProductCollectionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14768,
					"name": "createProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14769,
							"name": "createProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product collections."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.createProductCollections([\n    {\n      title: \"Summer Collection\",\n    },\n    {\n      title: \"Winter Collection\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14770,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product collections to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15256,
											"name": "CreateProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14771,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15240,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14772,
							"name": "createProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.createProductCollections({\n    title: \"Summer Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14773,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product collection to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15256,
										"name": "CreateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14774,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15240,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14775,
					"name": "upsertProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14776,
							"name": "upsertProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing collections, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.upsertProductCollections([\n    {\n      id: \"pcol_123\",\n      title: \"Winter Collection\",\n    },\n    {\n      title: \"Summer Collection\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14777,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each collection."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15261,
											"name": "UpsertProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14778,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15240,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14779,
							"name": "upsertProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing collection, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.upsertProductCollections({\n    id: \"pcol_123\",\n    title: \"Winter Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14780,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15261,
										"name": "UpsertProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14781,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15240,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14782,
					"name": "updateProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14783,
							"name": "updateProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.updateProductCollections(\"pcol_123\", {\n    title: \"Summer Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14784,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the collection to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14785,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the collection to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15268,
										"name": "UpdateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14786,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15240,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14787,
							"name": "updateProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of collections matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.updateProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      title: \"Summer Collection\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14788,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which collections to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15249,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14789,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected collections"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15268,
										"name": "UpdateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14790,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15240,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14791,
					"name": "deleteProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14792,
							"name": "deleteProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete collections by their ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product options are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14793,
									"name": "productCollectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product collections to be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14794,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14795,
					"name": "softDeleteProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14796,
							"name": "softDeleteProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete product collections. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "deleteCollections"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the collection. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieveCollections"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted collections can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restoreCollections"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the collection entity's relations.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14797,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14798,
									"name": "collectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the collections to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14799,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the collections. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the collection's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15052,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14797,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14800,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14801,
					"name": "restoreProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14802,
							"name": "restoreProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore collections which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the product entity's relations.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14803,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14804,
									"name": "collectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the collections to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14805,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the collections. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the collection's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15055,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14803,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14806,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14807,
					"name": "retrieveProductCategory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14808,
							"name": "retrieveProductCategory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product category by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product category by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.retrieveProductCategory(\"pcat_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst category = await productModuleService.retrieveProductCategory(\n  \"pcat_123\",\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14809,
									"name": "productCategoryId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product category to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14810,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product category is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15274,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14811,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15274,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14812,
					"name": "listProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14813,
							"name": "listProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product categories based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product categories using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listProductCategories({\n  id: [\"pcat_123\", \"pcat_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product categories:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listProductCategories(\n  {\n    id: [\"pcat_123\", \"pcat_321\"],\n  },\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listProductCategories(\n  {\n    id: [\"pcat_123\", \"pcat_321\"],\n  },\n  {\n    relations: [\"products\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14814,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to be applied on the retrieved product categories."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15290,
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14815,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product categories are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15274,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14816,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15274,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14817,
					"name": "listAndCountProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14818,
							"name": "listAndCountProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product categories along with the total count of available product categories satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product categories along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product categories using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountProductCategories({\n    id: [\"pcat_123\", \"pcat_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product categories:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountProductCategories(\n    {\n      id: [\"pcat_123\", \"pcat_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountProductCategories(\n    {\n      id: [\"pcat_123\", \"pcat_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14819,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved product categories."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15290,
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14820,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product categories are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14888,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15274,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14821,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15274,
													"name": "ProductCategoryDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14822,
					"name": "createProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14823,
							"name": "createProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product categories."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst categories =\n  await productModuleService.createProductCategories([\n    {\n      name: \"Tools\",\n    },\n    {\n      name: \"Clothing\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14824,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product categories to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15302,
											"name": "CreateProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14825,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15274,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14826,
							"name": "createProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product category."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.createProductCategories({\n    name: \"Tools\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14827,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product category to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15302,
										"name": "CreateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14828,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15274,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14829,
					"name": "upsertProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14830,
							"name": "upsertProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing categories, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst categories =\n  await productModuleService.upsertProductCategories([\n    {\n      id: \"pcat_123\",\n      name: \"Clothing\",\n    },\n    {\n      name: \"Tools\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14831,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each category."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15311,
											"name": "UpsertProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14832,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15274,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14833,
							"name": "upsertProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing category, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.upsertProductCategories({\n    id: \"pcat_123\",\n    name: \"Clothing\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14834,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15311,
										"name": "UpsertProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14835,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15274,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14836,
					"name": "updateProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14837,
							"name": "updateProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a category."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.updateProductCategories(\"pcat_123\", {\n    title: \"Tools\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14838,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the category to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14839,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the category to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15321,
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14840,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 15274,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14841,
							"name": "updateProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of categories matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst categories =\n  await productModuleService.updateProductCategories(\n    {\n      id: [\"pcat_123\", \"pcat_321\"],\n    },\n    {\n      title: \"Tools\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14842,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which categories to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15290,
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14843,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected categories"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15321,
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14844,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15274,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14845,
					"name": "deleteProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14846,
							"name": "deleteProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete categories by their ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product options are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductCategories([\n  \"pcat_123\",\n  \"pcat_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14847,
									"name": "productCategoryIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product categories to be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14848,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14849,
					"name": "softDeleteProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14850,
							"name": "softDeleteProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete product categories. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "deleteCategories"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the category. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieveCategories"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted categories can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restoreCategories"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the category entity's relations.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductCategories([\n  \"pcat_123\",\n  \"pcat_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14851,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14852,
									"name": "categoryIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the categories to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14853,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the categories. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the category's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15052,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14851,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14854,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14855,
					"name": "restoreProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 14856,
							"name": "restoreProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore categories which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the product entity's relations.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductCategories([\n  \"pcat_123\",\n  \"pcat_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 14857,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14858,
									"name": "categoryIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the categories to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14859,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the categories. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the category's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 15055,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14857,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14860,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14930,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						14441,
						14446,
						14451,
						14456,
						14463,
						14470,
						14479,
						14483,
						14489,
						14495,
						14500,
						14505,
						14510,
						14517,
						14524,
						14533,
						14537,
						14543,
						14549,
						14554,
						14559,
						14564,
						14571,
						14578,
						14587,
						14591,
						14597,
						14603,
						14608,
						14613,
						14618,
						14625,
						14632,
						14641,
						14645,
						14651,
						14657,
						14662,
						14667,
						14674,
						14683,
						14687,
						14693,
						14699,
						14704,
						14709,
						14714,
						14721,
						14728,
						14737,
						14741,
						14747,
						14753,
						14758,
						14763,
						14768,
						14775,
						14782,
						14791,
						14795,
						14801,
						14807,
						14812,
						14817,
						14822,
						14829,
						14836,
						14845,
						14849,
						14855
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 14874,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 15442,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15443,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 15444,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 15445,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 15446,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 15447,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 15448,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15443,
						15444,
						15448
					]
				}
			]
		},
		{
			"id": 15370,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15371,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15372,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 15373,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 15438,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15438,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 15374,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15375,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 15376,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 15442,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15438,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15377,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15378,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 15379,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15380,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 15381,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 15382,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 15449,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15381,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15449,
													"typeArguments": [
														{
															"type": "reference",
															"target": 15381,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 15383,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						15371,
						15374,
						15377,
						15379
					]
				}
			]
		},
		{
			"id": 14930,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 14931,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 14932,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 14942,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 14933,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 14942,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 14934,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14935,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14936,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14937,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14938,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 15370,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14939,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14940,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14941,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14931,
						14932,
						14933,
						14934,
						14935,
						14936,
						14937,
						14938,
						14939,
						14940,
						14941
					]
				}
			],
			"typeParameters": [
				{
					"id": 14942,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				14888,
				15384,
				15052,
				15055,
				15466,
				15414,
				14874,
				14898,
				15150,
				15274,
				15302,
				15311,
				15321,
				15058,
				15240,
				15076,
				15099,
				15361,
				15135,
				14943,
				15063,
				15083,
				15109,
				15129,
				15249,
				15176,
				15290,
				15256,
				15261,
				15268,
				15089,
				15092,
				15096,
				15410,
				15463,
				15069,
				15071,
				15074,
				15116,
				15144,
				15120,
				15125,
				15147,
				15184,
				15203,
				15222,
				14972,
				14999,
				15026,
				14440,
				15442,
				15370,
				14930
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				15355,
				15369,
				15459,
				15461,
				15486,
				15524,
				15514,
				15388,
				15511,
				15493,
				15513,
				15505,
				15490,
				15495,
				15480,
				15438,
				15449,
				15470,
				15498,
				15432,
				15330,
				15429,
				15360
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"14439": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": ""
		},
		"14440": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService"
		},
		"14441": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProduct"
		},
		"14442": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProduct"
		},
		"14443": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productId"
		},
		"14444": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14445": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14446": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProducts"
		},
		"14447": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProducts"
		},
		"14448": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14449": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14450": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14451": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProducts"
		},
		"14452": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProducts"
		},
		"14453": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14454": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14455": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14456": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProducts"
		},
		"14457": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProducts"
		},
		"14458": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14459": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14460": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProducts"
		},
		"14461": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14462": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14463": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProducts"
		},
		"14464": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProducts"
		},
		"14465": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14466": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14467": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProducts"
		},
		"14468": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14469": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14470": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProducts"
		},
		"14471": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProducts"
		},
		"14472": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"14473": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14474": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14475": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProducts"
		},
		"14476": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"14477": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14478": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14479": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProducts"
		},
		"14480": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProducts"
		},
		"14481": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"14482": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14483": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProducts"
		},
		"14484": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProducts"
		},
		"14485": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14486": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"14487": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14488": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14489": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProducts"
		},
		"14490": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProducts"
		},
		"14491": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14492": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"14493": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14494": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14495": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductTag"
		},
		"14496": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductTag"
		},
		"14497": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "tagId"
		},
		"14498": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14499": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14500": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTags"
		},
		"14501": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTags"
		},
		"14502": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14503": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14504": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14505": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTags"
		},
		"14506": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTags"
		},
		"14507": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14508": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14509": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14510": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTags"
		},
		"14511": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTags"
		},
		"14512": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14513": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14514": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTags"
		},
		"14515": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14516": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14517": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTags"
		},
		"14518": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTags"
		},
		"14519": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14520": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14521": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTags"
		},
		"14522": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14523": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14524": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTags"
		},
		"14525": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTags"
		},
		"14526": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"14527": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14528": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14529": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTags"
		},
		"14530": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"14531": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14532": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14533": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTags"
		},
		"14534": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTags"
		},
		"14535": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productTagIds"
		},
		"14536": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14537": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTags"
		},
		"14538": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTags"
		},
		"14539": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14540": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "tagIds"
		},
		"14541": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14542": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14543": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTags"
		},
		"14544": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTags"
		},
		"14545": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14546": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "tagIds"
		},
		"14547": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14548": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14549": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductType"
		},
		"14550": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductType"
		},
		"14551": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "typeId"
		},
		"14552": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14553": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14554": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTypes"
		},
		"14555": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTypes"
		},
		"14556": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14557": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14558": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14559": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTypes"
		},
		"14560": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTypes"
		},
		"14561": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14562": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14563": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14564": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTypes"
		},
		"14565": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTypes"
		},
		"14566": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14567": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14568": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTypes"
		},
		"14569": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14570": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14571": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTypes"
		},
		"14572": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTypes"
		},
		"14573": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14574": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14575": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTypes"
		},
		"14576": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14577": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14578": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTypes"
		},
		"14579": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTypes"
		},
		"14580": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"14581": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14582": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14583": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTypes"
		},
		"14584": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"14585": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14586": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14587": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTypes"
		},
		"14588": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTypes"
		},
		"14589": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productTypeIds"
		},
		"14590": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14591": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTypes"
		},
		"14592": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTypes"
		},
		"14593": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14594": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "typeIds"
		},
		"14595": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14596": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14597": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTypes"
		},
		"14598": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTypes"
		},
		"14599": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14600": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "typeIds"
		},
		"14601": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14602": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14603": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductOption"
		},
		"14604": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductOption"
		},
		"14605": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionId"
		},
		"14606": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14607": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14608": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductOptions"
		},
		"14609": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductOptions"
		},
		"14610": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14611": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14612": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14613": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductOptions"
		},
		"14614": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductOptions"
		},
		"14615": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14616": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14617": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14618": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptions"
		},
		"14619": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptions"
		},
		"14620": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14621": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14622": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptions"
		},
		"14623": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14624": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14625": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductOptions"
		},
		"14626": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductOptions"
		},
		"14627": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14628": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14629": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductOptions"
		},
		"14630": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14631": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14632": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptions"
		},
		"14633": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptions"
		},
		"14634": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"14635": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14636": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14637": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptions"
		},
		"14638": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"14639": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14640": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14641": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductOptions"
		},
		"14642": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductOptions"
		},
		"14643": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productOptionIds"
		},
		"14644": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14645": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductOptions"
		},
		"14646": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductOptions"
		},
		"14647": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14648": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"14649": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14650": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14651": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductOptions"
		},
		"14652": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductOptions"
		},
		"14653": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14654": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"14655": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14656": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14657": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductOptionValues"
		},
		"14658": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductOptionValues"
		},
		"14659": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14660": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14661": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14662": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductOptionValues"
		},
		"14663": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductOptionValues"
		},
		"14664": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14665": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14666": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14667": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptionValues"
		},
		"14668": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptionValues"
		},
		"14669": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14670": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14671": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptionValues"
		},
		"14672": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14673": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14674": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptionValues"
		},
		"14675": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptionValues"
		},
		"14676": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"14677": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14678": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14679": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptionValues"
		},
		"14680": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"14681": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14682": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14683": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductOptionValues"
		},
		"14684": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductOptionValues"
		},
		"14685": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productOptionValueIds"
		},
		"14686": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14687": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductOptionValues"
		},
		"14688": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductOptionValues"
		},
		"14689": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14690": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"14691": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14692": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14693": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductOptionValues"
		},
		"14694": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductOptionValues"
		},
		"14695": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14696": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"14697": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14698": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14699": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductVariant"
		},
		"14700": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductVariant"
		},
		"14701": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productVariantId"
		},
		"14702": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14703": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14704": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductVariants"
		},
		"14705": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductVariants"
		},
		"14706": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14707": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14708": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14709": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductVariants"
		},
		"14710": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductVariants"
		},
		"14711": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14712": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14713": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14714": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductVariants"
		},
		"14715": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductVariants"
		},
		"14716": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14717": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14718": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductVariants"
		},
		"14719": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14720": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14721": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductVariants"
		},
		"14722": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductVariants"
		},
		"14723": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14724": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14725": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductVariants"
		},
		"14726": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14727": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14728": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductVariants"
		},
		"14729": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductVariants"
		},
		"14730": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"14731": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14732": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14733": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductVariants"
		},
		"14734": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"14735": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14736": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14737": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductVariants"
		},
		"14738": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductVariants"
		},
		"14739": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productVariantIds"
		},
		"14740": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14741": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductVariants"
		},
		"14742": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductVariants"
		},
		"14743": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14744": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "variantIds"
		},
		"14745": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14746": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14747": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductVariants"
		},
		"14748": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductVariants"
		},
		"14749": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14750": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "variantIds"
		},
		"14751": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14752": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14753": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCollection"
		},
		"14754": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCollection"
		},
		"14755": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCollectionId"
		},
		"14756": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14757": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14758": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCollections"
		},
		"14759": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCollections"
		},
		"14760": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14761": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14762": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14763": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCollections"
		},
		"14764": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCollections"
		},
		"14765": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14766": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14767": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14768": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCollections"
		},
		"14769": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCollections"
		},
		"14770": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14771": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14772": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCollections"
		},
		"14773": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14774": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14775": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCollections"
		},
		"14776": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCollections"
		},
		"14777": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14778": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14779": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCollections"
		},
		"14780": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14781": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14782": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCollections"
		},
		"14783": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCollections"
		},
		"14784": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"14785": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14786": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14787": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCollections"
		},
		"14788": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"14789": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14790": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14791": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCollections"
		},
		"14792": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCollections"
		},
		"14793": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCollectionIds"
		},
		"14794": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14795": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCollections"
		},
		"14796": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCollections"
		},
		"14797": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14798": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "collectionIds"
		},
		"14799": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14800": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14801": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCollections"
		},
		"14802": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCollections"
		},
		"14803": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14804": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "collectionIds"
		},
		"14805": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14806": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14807": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCategory"
		},
		"14808": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCategory"
		},
		"14809": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCategoryId"
		},
		"14810": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14811": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14812": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCategories"
		},
		"14813": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCategories"
		},
		"14814": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14815": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14816": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14817": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCategories"
		},
		"14818": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCategories"
		},
		"14819": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"14820": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14821": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14822": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCategories"
		},
		"14823": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCategories"
		},
		"14824": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14825": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14826": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCategories"
		},
		"14827": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14828": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14829": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCategories"
		},
		"14830": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCategories"
		},
		"14831": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14832": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14833": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCategories"
		},
		"14834": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14835": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14836": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCategories"
		},
		"14837": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCategories"
		},
		"14838": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"14839": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14840": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14841": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCategories"
		},
		"14842": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"14843": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"14844": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14845": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCategories"
		},
		"14846": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCategories"
		},
		"14847": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCategoryIds"
		},
		"14848": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14849": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCategories"
		},
		"14850": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCategories"
		},
		"14851": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14852": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "categoryIds"
		},
		"14853": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14854": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14855": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCategories"
		},
		"14856": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCategories"
		},
		"14857": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14858": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "categoryIds"
		},
		"14859": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"14860": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14874": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"14875": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"14876": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"14877": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__hooks"
		},
		"14878": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14879": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationStart"
		},
		"14880": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14881": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14882": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationShutdown"
		},
		"14883": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14884": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14885": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationPrepareShutdown"
		},
		"14886": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14887": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14888": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"14889": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"14890": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"14891": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"14892": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"14893": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"14894": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"14895": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"14896": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"14897": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"14898": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO"
		},
		"14899": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.id"
		},
		"14900": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.title"
		},
		"14901": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.handle"
		},
		"14902": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.subtitle"
		},
		"14903": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.description"
		},
		"14904": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.is_giftcard"
		},
		"14905": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.status"
		},
		"14906": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.thumbnail"
		},
		"14907": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.width"
		},
		"14908": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.weight"
		},
		"14909": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.length"
		},
		"14910": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.height"
		},
		"14911": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.origin_country"
		},
		"14912": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.hs_code"
		},
		"14913": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.mid_code"
		},
		"14914": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.material"
		},
		"14915": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.collection"
		},
		"14916": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.collection_id"
		},
		"14917": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.categories"
		},
		"14918": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.type"
		},
		"14919": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.type_id"
		},
		"14920": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.tags"
		},
		"14921": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.variants"
		},
		"14922": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.options"
		},
		"14923": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.images"
		},
		"14924": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.discountable"
		},
		"14925": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.external_id"
		},
		"14926": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.created_at"
		},
		"14927": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.updated_at"
		},
		"14928": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.deleted_at"
		},
		"14929": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.metadata"
		},
		"14930": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"14931": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"14932": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"14933": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"14934": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"14935": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"14936": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"14937": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"14938": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"14939": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"14940": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"14941": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"14942": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"14943": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps"
		},
		"14944": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.q"
		},
		"14945": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.status"
		},
		"14946": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.title"
		},
		"14947": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.handle"
		},
		"14948": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.id"
		},
		"14949": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.external_id"
		},
		"14950": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.is_giftcard"
		},
		"14951": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.tags"
		},
		"14952": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"14953": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.id"
		},
		"14954": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.variants"
		},
		"14955": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"14956": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.options"
		},
		"14957": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"14958": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.value"
		},
		"14959": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.option_id"
		},
		"14960": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.type_id"
		},
		"14961": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.categories"
		},
		"14962": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"14963": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.id"
		},
		"14964": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"14965": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.id"
		},
		"14966": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.collection_id"
		},
		"14967": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.created_at"
		},
		"14968": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.updated_at"
		},
		"14969": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.deleted_at"
		},
		"14970": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"14971": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"14972": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO"
		},
		"14973": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.id"
		},
		"14974": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.title"
		},
		"14975": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.subtitle"
		},
		"14976": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.description"
		},
		"14977": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.is_giftcard"
		},
		"14978": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.discountable"
		},
		"14979": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.thumbnail"
		},
		"14980": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.handle"
		},
		"14981": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.status"
		},
		"14982": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.images"
		},
		"14983": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.external_id"
		},
		"14984": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.type_id"
		},
		"14985": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.collection_id"
		},
		"14986": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.tag_ids"
		},
		"14987": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.category_ids"
		},
		"14988": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.options"
		},
		"14989": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.variants"
		},
		"14990": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.width"
		},
		"14991": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.height"
		},
		"14992": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.length"
		},
		"14993": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.weight"
		},
		"14994": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.origin_country"
		},
		"14995": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.hs_code"
		},
		"14996": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.material"
		},
		"14997": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.mid_code"
		},
		"14998": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.metadata"
		},
		"14999": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductDTO"
		},
		"15000": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductDTO.id"
		},
		"15001": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.title"
		},
		"15002": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.subtitle"
		},
		"15003": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.description"
		},
		"15004": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.is_giftcard"
		},
		"15005": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.discountable"
		},
		"15006": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.thumbnail"
		},
		"15007": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.handle"
		},
		"15008": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.status"
		},
		"15009": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.images"
		},
		"15010": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.external_id"
		},
		"15011": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.type_id"
		},
		"15012": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.collection_id"
		},
		"15013": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.tag_ids"
		},
		"15014": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.category_ids"
		},
		"15015": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.options"
		},
		"15016": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.variants"
		},
		"15017": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.width"
		},
		"15018": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.height"
		},
		"15019": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.length"
		},
		"15020": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.weight"
		},
		"15021": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.origin_country"
		},
		"15022": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.hs_code"
		},
		"15023": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.material"
		},
		"15024": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.mid_code"
		},
		"15025": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.metadata"
		},
		"15026": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO"
		},
		"15027": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.title"
		},
		"15028": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.subtitle"
		},
		"15029": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.description"
		},
		"15030": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.is_giftcard"
		},
		"15031": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.discountable"
		},
		"15032": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.thumbnail"
		},
		"15033": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.handle"
		},
		"15034": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.status"
		},
		"15035": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.images"
		},
		"15036": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.external_id"
		},
		"15037": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.type_id"
		},
		"15038": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.collection_id"
		},
		"15039": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.tag_ids"
		},
		"15040": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.category_ids"
		},
		"15041": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.options"
		},
		"15042": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.variants"
		},
		"15043": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.width"
		},
		"15044": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.height"
		},
		"15045": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.length"
		},
		"15046": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.weight"
		},
		"15047": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.origin_country"
		},
		"15048": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.hs_code"
		},
		"15049": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.material"
		},
		"15050": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.mid_code"
		},
		"15051": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.metadata"
		},
		"15052": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"15053": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"15054": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"15055": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"15056": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"15057": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"15058": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO"
		},
		"15059": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.id"
		},
		"15060": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.value"
		},
		"15061": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.metadata"
		},
		"15062": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.products"
		},
		"15063": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps"
		},
		"15064": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps.q"
		},
		"15065": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps.id"
		},
		"15066": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps.value"
		},
		"15067": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15068": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15069": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTagDTO"
		},
		"15070": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTagDTO.value"
		},
		"15071": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTagDTO"
		},
		"15072": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTagDTO.id"
		},
		"15073": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO.value"
		},
		"15074": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO"
		},
		"15075": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO.value"
		},
		"15076": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO"
		},
		"15077": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.id"
		},
		"15078": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.value"
		},
		"15079": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.metadata"
		},
		"15080": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.created_at"
		},
		"15081": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.updated_at"
		},
		"15082": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.deleted_at"
		},
		"15083": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps"
		},
		"15084": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps.q"
		},
		"15085": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps.id"
		},
		"15086": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps.value"
		},
		"15087": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15088": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15089": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO"
		},
		"15090": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO.value"
		},
		"15091": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO.metadata"
		},
		"15092": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTypeDTO"
		},
		"15093": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTypeDTO.id"
		},
		"15094": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.value"
		},
		"15095": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.metadata"
		},
		"15096": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO"
		},
		"15097": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.value"
		},
		"15098": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.metadata"
		},
		"15099": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO"
		},
		"15100": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.id"
		},
		"15101": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.title"
		},
		"15102": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.product"
		},
		"15103": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.product_id"
		},
		"15104": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.values"
		},
		"15105": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.metadata"
		},
		"15106": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.created_at"
		},
		"15107": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.updated_at"
		},
		"15108": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.deleted_at"
		},
		"15109": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps"
		},
		"15110": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.q"
		},
		"15111": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.id"
		},
		"15112": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.title"
		},
		"15113": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.product_id"
		},
		"15114": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15115": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15116": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO"
		},
		"15117": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.title"
		},
		"15118": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.values"
		},
		"15119": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.product_id"
		},
		"15120": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductOptionDTO"
		},
		"15121": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductOptionDTO.id"
		},
		"15122": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.title"
		},
		"15123": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.values"
		},
		"15124": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.product_id"
		},
		"15125": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO"
		},
		"15126": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.title"
		},
		"15127": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.values"
		},
		"15128": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.product_id"
		},
		"15129": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionValueProps"
		},
		"15130": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionValueProps.q"
		},
		"15131": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionValueProps.id"
		},
		"15132": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionValueProps.value"
		},
		"15133": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15134": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15135": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO"
		},
		"15136": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.id"
		},
		"15137": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.value"
		},
		"15138": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.option"
		},
		"15139": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.option_id"
		},
		"15140": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.metadata"
		},
		"15141": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.created_at"
		},
		"15142": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.updated_at"
		},
		"15143": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.deleted_at"
		},
		"15144": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionValueDTO"
		},
		"15145": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionValueDTO.value"
		},
		"15146": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionValueDTO.metadata"
		},
		"15147": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionValueDTO"
		},
		"15148": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionValueDTO.value"
		},
		"15149": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionValueDTO.metadata"
		},
		"15150": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO"
		},
		"15151": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"15152": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"15153": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"15154": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"15155": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"15156": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"15157": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"15158": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"15159": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.requires_shipping"
		},
		"15160": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"15161": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"15162": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"15163": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"15164": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"15165": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"15166": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"15167": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"15168": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"15169": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"15170": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"15171": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"15172": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"15173": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"15174": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"15175": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"15176": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps"
		},
		"15177": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.q"
		},
		"15178": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.id"
		},
		"15179": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.sku"
		},
		"15180": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.product_id"
		},
		"15181": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.options"
		},
		"15182": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15183": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15184": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO"
		},
		"15185": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.product_id"
		},
		"15186": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.title"
		},
		"15187": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.sku"
		},
		"15188": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.barcode"
		},
		"15189": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.ean"
		},
		"15190": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.upc"
		},
		"15191": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.allow_backorder"
		},
		"15192": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.manage_inventory"
		},
		"15193": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.hs_code"
		},
		"15194": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.origin_country"
		},
		"15195": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.mid_code"
		},
		"15196": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.material"
		},
		"15197": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.weight"
		},
		"15198": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.length"
		},
		"15199": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.height"
		},
		"15200": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.width"
		},
		"15201": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.options"
		},
		"15202": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.metadata"
		},
		"15203": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductVariantDTO"
		},
		"15204": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductVariantDTO.id"
		},
		"15205": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.title"
		},
		"15206": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.sku"
		},
		"15207": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.barcode"
		},
		"15208": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.ean"
		},
		"15209": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.upc"
		},
		"15210": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.allow_backorder"
		},
		"15211": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.manage_inventory"
		},
		"15212": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.hs_code"
		},
		"15213": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.origin_country"
		},
		"15214": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.mid_code"
		},
		"15215": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.material"
		},
		"15216": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.weight"
		},
		"15217": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.length"
		},
		"15218": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.height"
		},
		"15219": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.width"
		},
		"15220": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.options"
		},
		"15221": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.metadata"
		},
		"15222": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO"
		},
		"15223": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.title"
		},
		"15224": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.sku"
		},
		"15225": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.barcode"
		},
		"15226": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.ean"
		},
		"15227": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.upc"
		},
		"15228": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.allow_backorder"
		},
		"15229": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.manage_inventory"
		},
		"15230": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.hs_code"
		},
		"15231": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.origin_country"
		},
		"15232": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.mid_code"
		},
		"15233": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.material"
		},
		"15234": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.weight"
		},
		"15235": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.length"
		},
		"15236": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.height"
		},
		"15237": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.width"
		},
		"15238": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.options"
		},
		"15239": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.metadata"
		},
		"15240": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO"
		},
		"15241": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.id"
		},
		"15242": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.title"
		},
		"15243": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.handle"
		},
		"15244": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.metadata"
		},
		"15245": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.created_at"
		},
		"15246": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.updated_at"
		},
		"15247": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.deleted_at"
		},
		"15248": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.products"
		},
		"15249": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps"
		},
		"15250": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.q"
		},
		"15251": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.id"
		},
		"15252": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.handle"
		},
		"15253": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.title"
		},
		"15254": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15255": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15256": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO"
		},
		"15257": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.title"
		},
		"15258": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.handle"
		},
		"15259": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.product_ids"
		},
		"15260": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.metadata"
		},
		"15261": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCollectionDTO"
		},
		"15262": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCollectionDTO.id"
		},
		"15263": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.value"
		},
		"15264": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.title"
		},
		"15265": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.handle"
		},
		"15266": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.product_ids"
		},
		"15267": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.metadata"
		},
		"15268": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO"
		},
		"15269": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.value"
		},
		"15270": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.title"
		},
		"15271": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.handle"
		},
		"15272": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.product_ids"
		},
		"15273": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.metadata"
		},
		"15274": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO"
		},
		"15275": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.id"
		},
		"15276": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.name"
		},
		"15277": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.description"
		},
		"15278": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.handle"
		},
		"15279": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.is_active"
		},
		"15280": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.is_internal"
		},
		"15281": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.rank"
		},
		"15282": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.metadata"
		},
		"15283": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.parent_category"
		},
		"15284": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.parent_category_id"
		},
		"15285": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.category_children"
		},
		"15286": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.products"
		},
		"15287": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.created_at"
		},
		"15288": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.updated_at"
		},
		"15289": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.deleted_at"
		},
		"15290": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps"
		},
		"15291": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.q"
		},
		"15292": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.id"
		},
		"15293": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.name"
		},
		"15294": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.parent_category_id"
		},
		"15295": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.handle"
		},
		"15296": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.is_active"
		},
		"15297": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.is_internal"
		},
		"15298": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.include_descendants_tree"
		},
		"15299": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.include_ancestors_tree"
		},
		"15300": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15301": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15302": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO"
		},
		"15303": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.name"
		},
		"15304": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.description"
		},
		"15305": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.handle"
		},
		"15306": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.is_active"
		},
		"15307": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.is_internal"
		},
		"15308": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.rank"
		},
		"15309": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.parent_category_id"
		},
		"15310": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.metadata"
		},
		"15311": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCategoryDTO"
		},
		"15312": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCategoryDTO.id"
		},
		"15313": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.name"
		},
		"15314": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.description"
		},
		"15315": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.handle"
		},
		"15316": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_active"
		},
		"15317": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_internal"
		},
		"15318": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.rank"
		},
		"15319": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.parent_category_id"
		},
		"15320": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.metadata"
		},
		"15321": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO"
		},
		"15322": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.name"
		},
		"15323": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.description"
		},
		"15324": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.handle"
		},
		"15325": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_active"
		},
		"15326": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_internal"
		},
		"15327": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.rank"
		},
		"15328": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.parent_category_id"
		},
		"15329": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.metadata"
		},
		"15330": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"15331": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"15332": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"15333": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"15334": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"15335": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"15336": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"15337": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"15338": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"15339": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"15340": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"15341": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"15342": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"15343": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"15344": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"15345": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"15346": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"15347": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"15348": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"15349": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"15350": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"15351": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"15352": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"15353": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"15354": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"15355": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfigOrder"
		},
		"15356": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"15357": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"15359": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"15360": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductStatus"
		},
		"15361": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO"
		},
		"15362": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.id"
		},
		"15363": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.url"
		},
		"15364": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.rank"
		},
		"15365": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.metadata"
		},
		"15366": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.created_at"
		},
		"15367": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.updated_at"
		},
		"15368": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.deleted_at"
		},
		"15369": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "MetadataType"
		},
		"15370": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"15371": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"15372": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"15373": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"15374": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"15375": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"15376": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"15377": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"15378": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"15379": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"15380": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"15381": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"15382": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"15383": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"15384": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"15385": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15386": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15387": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"15388": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"15389": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"15390": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"15391": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"15392": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"15393": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"15394": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"15395": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"15396": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"15397": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"15398": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"15399": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"15400": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"15401": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"15402": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"15403": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"15404": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"15405": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"15406": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"15407": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"15408": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"15409": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"15410": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductImageDTO"
		},
		"15411": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductImageDTO.id"
		},
		"15412": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.url"
		},
		"15413": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.metadata"
		},
		"15414": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"15415": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"15416": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"15417": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"15418": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"15419": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"15420": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"15421": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"15422": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"15423": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"15424": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"15425": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"15426": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"15427": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"15428": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"15429": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"15430": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"15431": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"15432": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"15433": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"15434": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"15435": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"15436": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"15437": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"15438": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"15439": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"15440": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"15441": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"15442": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"15443": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"15444": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"15445": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"15446": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"15448": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"15449": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"15450": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"15451": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"15452": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"15453": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"15454": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"15455": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"15456": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"15457": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"15458": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"15459": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"15460": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"15461": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"15462": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"15463": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO"
		},
		"15464": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.url"
		},
		"15465": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.metadata"
		},
		"15466": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"15467": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"15468": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"15469": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"15470": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"15471": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"15472": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"15473": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"15474": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"15475": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"15476": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"15477": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"15478": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"15479": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"15480": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"15481": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"15482": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"15483": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"15484": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"15485": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"15486": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"15487": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"15488": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"15489": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"15490": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"15491": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"15492": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"15493": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"15494": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"15495": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"15496": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"15497": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"15498": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"15499": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"15500": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"15501": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"15502": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"15503": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"15504": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"15505": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQueryProperties"
		},
		"15506": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"15507": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"15509": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"15510": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"15511": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"15512": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"15513": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"15514": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"15515": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"15516": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"15517": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"15518": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"15519": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"15520": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"15521": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"15522": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"15523": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"15524": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"15525": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/product/service.ts"
		},
		"reflections": {
			"1": 14439
		}
	}
}
